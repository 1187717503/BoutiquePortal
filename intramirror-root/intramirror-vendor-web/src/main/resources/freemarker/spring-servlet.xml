<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
    	http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<!-- 配置转义符 -->
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
	<context:component-scan base-package="com.intramirror.web.common"/>

	<!--引入属性文件 -->
    <context:property-placeholder location="classpath:/commons.properties"/>

	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<description>freemarker config</description>
		<property name="templateLoaderPath" value="/WEB-INF/views/" />
		<!-- 配置全局变量 -->
		<property name="freemarkerVariables">
			<map>
				<entry key="xml_escape" value-ref="fmXmlEscape" />
				<entry key="css_suffix" value="${css_suffix}"/>
				<entry key="js_suffix" value="${js_suffix}"/>
				<entry key="baseUrl" value="${baseUrl}"/>
				<entry key="jscssdate_format" value="yymmdd"></entry>
			</map>
		</property>
	</bean>
	
	<!-- frremarker 视图解析 -->
	<bean id="freemakerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="viewNames">
			<array>
				<value>*.ftl</value>
			</array>
		</property>
		<property name="contentType" value="text/html; charset=utf-8" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="requestContextAttribute" value="request" />
		<property name="cache" value="true" />
		<property name="order" value="1" />
	</bean>

	<!-- redis config start -->
	<!-- 配置JedisPoolConfig实例 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxTotal" value="${redis.maxActive}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

	<!-- 配置JedisConnectionFactory -->
	<bean id="jedisConnectionFactory"
		  class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="hostName" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<!-- <property name="password" value="${redis.pass}" /> -->
		<property name="database" value="${redis.dbIndex}" />
		<property name="poolConfig" ref="poolConfig" />
	</bean>

	<!-- 配置RedisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />
	</bean>

	<!-- 配置RedisCacheManager -->
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate" />
		<property name="defaultExpiration" value="${redis.expiration}" />
	</bean>

	<!-- 配置RedisCacheConfig -->
	<!--<bean id="redisCacheConfig" class="com.intramirror.web.common.RedisCacheConfig">
		<constructor-arg ref="jedisConnectionFactory" />
		<constructor-arg ref="redisTemplate" />
		<constructor-arg ref="redisCacheManager" />
	</bean>-->
	<!-- redis config end -->

	<bean id="redisUtil" class="com.intramirror.web.util.RedisUtil">
		<property name="redisTemplate" value="redisTemplate"/>
 	</bean>

	<bean class="com.intramirror.web.common.cache.CategoryCache" init-method="init"/>
</beans>