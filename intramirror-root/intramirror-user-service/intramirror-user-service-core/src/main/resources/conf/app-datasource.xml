<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!--数据库连接-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
	    <property name="driverClassName" value="${jdbc.driver}"/>
	    <property name="url" value="${jdbc.url}" />
	    <property name="username" value="${jdbc.username}"/>
	    <property name="password" value="${jdbc.password}"/>
	    <!-- 配置初始化大小、最小、最大 -->
	    <property name="initialSize"><value>1</value></property>
	    <property name="maxActive"><value>5</value></property>
	    <property name="minIdle"><value>1</value></property>
	    <!-- 配置获取连接等待超时的时间 -->
	    <property name="maxWait"><value>60000</value></property>
	    <!-- 配置监控统计拦截的filters -->
	    <property name="filters"><value>stat</value></property>
	    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
	    <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>
	    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
	    <property name="minEvictableIdleTimeMillis"><value>300000</value></property>
 	</bean>
 	
 	<!-- mybatis配置 -->
    <bean id="userSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.intramirror.user.api.model"></property>
        <property name="configLocation" value="classpath:conf/UserMybatis/mybatis-config.xml" />
        <property name="mapperLocations" value="classpath:conf/UserSqlMap/*.xml"></property>
    </bean> 
    
    <bean id="userSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
   		<constructor-arg ref="userSqlSessionFactory" />
  	</bean>

    <beans profile="test">
        <context:property-placeholder location="classpath:/test/databases.properties" ignore-unresolvable="true"/>
    </beans>
    <beans profile="staging">
        <context:property-placeholder location="classpath:/staging/databases.properties" ignore-unresolvable="true"/>
    </beans>
    <beans profile="test_local">
        <context:property-placeholder location="classpath:/test_local/databases.properties" ignore-unresolvable="true"/>
    </beans>
    <beans profile="test_ci">
        <context:property-placeholder location="classpath:/test_ci/databases.properties" ignore-unresolvable="true"/>
    </beans>
    <beans profile="staging_local">
        <context:property-placeholder location="classpath:/staging_local/databases.properties" ignore-unresolvable="true"/>
    </beans>
    <beans profile="prd">
        <context:property-placeholder location="classpath:/prd/databases.properties" ignore-unresolvable="true"/>
    </beans>
</beans>