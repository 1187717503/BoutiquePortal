<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.intramirror.order.core.mapper.ext.ReportExtMapper" >

   	<!--<resultMap id="BaseResultMap" type="com.intramirror.order.api.vo.ReportVO" >
		<result column="skuId" property="skuId" jdbcType="BIGINT" />
	    <result column="converpic" property="result" jdbcType="VARCHAR" />
	    <result column="designerId" property="designerId" jdbcType="VARCHAR" />
	    <result column="colorCode" property="colorCode" jdbcType="VARCHAR" />
		<result column="boutiqueId" property="boutiqueId" jdbcType="VARCHAR" />
	    <result column="retailPrice" property="retailPrice" jdbcType="DECIMAL" />
	    <result column="boutiquePrice" property="boutiquePrice" jdbcType="DECIMAL" />
	    <result column="size" property="size" jdbcType="VARCHAR" />
	    <result column="categoryName" property="categoryName" jdbcType="VARCHAR" />
	    <result column="brandName" property="brandName" jdbcType="VARCHAR" />
	    <result column="seasonCode" property="seasonCode" jdbcType="VARCHAR" />
	    <result column="stock" property="stock" jdbcType="INTEGER" />
  	</resultMap>
	<resultMap id="seasonResultMap" type="com.intramirror.order.api.vo.SeasonVO">
		<result column="seasonCode" property="seasonCode" jdbcType="VARCHAR" />
		<result column="seasonSn" property="seasonSn" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="brandResultMap" type="com.intramirror.order.api.vo.BrandVO">
		<result column="brandId" property="brandId" javaType="BIGINT"/>
		<result column="englishName" property="englishName" javaType="VARCHAR"/>
	</resultMap>-->
	<select id="searchByParam" resultType="com.intramirror.order.api.vo.ReportVO" parameterType="com.intramirror.order.api.vo.ReportRequestVO">

		SELECT
			s.sku_id as skuId,
			p.cover_img as converpic,
			p.designer_id as designerId,
			p.color_code as colorCode,
			v.vendor_name as boutique,
			p.product_code as boutiqueId,
			CONVERT(1 - s.in_price / s.price * (t.`tax_rate`+1), DECIMAL(10, 2)) * 100 AS boutiqueDiscount,
			s.price as retailPrice,
			s.in_price as boutiquePrice,
			s.size as size,
			CONCAT_WS("->" , c2. NAME , c1. NAME , c. NAME) categoryName ,
			b.english_name as brandName ,
			p.season_code as seasonCode,
			(CAST(ss.store as signed) + CAST(ss.confirmed as signed) + CAST(ss.reserved as signed) + CAST(ss.locked as signed))  as stock
		FROM
			sku s
		LEFT JOIN sku_store ss ON(ss.sku_id = s.sku_id)
		LEFT JOIN product p ON(p.product_id = s.product_id)
		LEFT JOIN vendor v ON(v.vendor_id = p.vendor_id)
		LEFT JOIN brand b ON(b.brand_id = p.brand_id)
		LEFT JOIN category c ON(c.category_id = p.category_id)
		LEFT JOIN category c1 ON(c1.category_id = c.parent_id)
		LEFT JOIN category c2 ON(c2.category_id = c1.parent_id)
		LEFT JOIN tax t on(v.address_country_id = t.address_country_id)
		WHERE p.enabled = 1 and t.tax_type = 1
		<if test="vendorIds != null" >
			and p.vendor_id in
			<foreach collection="vendorIds" item="vendorId" separator="," close=")" open="(">
				#{vendorId}
			</foreach>
		</if>
		<if test="designerId != null" >
			and p.designer_id =  #{designerId,jdbcType=VARCHAR}
		</if>
		<if test="colorCode != null" >
			and p.color_code =  #{colorCode,jdbcType=VARCHAR}
		</if>
		<if test="brandId != null" >
			and p.brand_id =  #{brandId,jdbcType=BIGINT}
		</if>
        <if test="categoryId != null" >
            and p.category_id =  #{categoryId,jdbcType=BIGINT}
        </if>
		<if test="boutiqueId != null" >
			and p.product_code =  #{boutiqueId,jdbcType=VARCHAR}
		</if>
        <if test="seasonCode != null" >
            and p.season_code =  #{seasonCode,jdbcType=VARCHAR}
        </if>
		<if test="hasStock != null" >
			<if test="hasStock == 0">
				HAVING <![CDATA[ stock <= 0 ]]>
			</if>
			<if test="hasStock == 1">
				HAVING stock > 0
			</if>
		</if>
		ORDER BY b.english_name asc,p.season_code asc,p.designer_id asc,p.color_code asc,s.size asc
		LIMIT #{start},#{pageSize};
	</select>

    <select id="countByParam" resultType="long" parameterType="com.intramirror.order.api.vo.ReportRequestVO">
        SELECT COUNT(*) FROM (
			SELECT
			(CAST(ss.store as signed) + CAST(ss.confirmed as signed) + CAST(ss.reserved as signed) + CAST(ss.locked as signed))  as stock
			FROM
			sku s
			LEFT JOIN sku_store ss ON(ss.sku_id = s.sku_id)
			LEFT JOIN product p ON(p.product_id = s.product_id)
			LEFT JOIN vendor v ON(v.vendor_id = p.vendor_id)
			LEFT JOIN brand b ON(b.brand_id = p.brand_id)
			LEFT JOIN category c ON(c.category_id = p.category_id)
			LEFT JOIN category c1 ON(c1.category_id = c.parent_id)
			LEFT JOIN category c2 ON(c2.category_id = c1.parent_id)
			WHERE p.enabled = 1
			<if test="vendorIds != null" >
				and p.vendor_id in
				<foreach collection="vendorIds" item="vendorId" separator="," close=")" open="(">
					#{vendorId}
				</foreach>
			</if>
			<if test="designerId != null" >
				and p.designer_id =  #{designerId,jdbcType=VARCHAR}
			</if>
			<if test="colorCode != null" >
				and p.color_code =  #{colorCode,jdbcType=VARCHAR}
			</if>
			<if test="brandId != null" >
				and p.brand_id =  #{brandId,jdbcType=BIGINT}
			</if>
			<if test="categoryId != null" >
				and p.category_id =  #{categoryId,jdbcType=BIGINT}
			</if>
			<if test="boutiqueId != null" >
				and p.product_code =  #{boutiqueId,jdbcType=VARCHAR}
			</if>
			<if test="seasonCode != null" >
				and p.season_code =  #{seasonCode,jdbcType=VARCHAR}
			</if>
			<if test="hasStock != null" >
				<if test="hasStock == 0">
					HAVING <![CDATA[ stock <= 0 ]]>
				</if>
				<if test="hasStock == 1">
					HAVING stock > 0
				</if>
			</if>
		) t

    </select>

    <select id="queryAllSeason" resultType="com.intramirror.order.api.vo.SeasonVO">
        select season_code as seasonCode,season_sn as seasonSn from season where enabled = 1 ORDER BY season_sort desc
    </select>

    <select id="queryVendorIdByUserId" resultType="long" parameterType="long">
        select vendor_id from vendor where user_id = #{userId,jdbcType=BIGINT}
    </select>

	<select id="queryVendorBrand" resultType="com.intramirror.order.api.vo.BrandVO" parameterType="list">
		select DISTINCT b.brand_id as brandId,b.english_name as englishName from brand b left join product p on(p.brand_id = b.brand_id) where b.enabled = 1 and p.vendor_id IN
		<foreach collection="vendorIds" index="index" open="(" close=")" separator="," item="id">
			#{id}
		</foreach>
	</select>

	<select id="queryVendorIdsByParentId" resultType="long" parameterType="long">
		select vendor_id from vendor where parent_id = #{vendorId,jdbcType=BIGINT} and enabled = 1
	</select>

	<select id="queryVendorsByUserId" resultType="com.intramirror.order.api.vo.VendorVO" parameterType="long">
		SELECT DISTINCT
			v1.vendor_id vendorId ,
			v1.vendor_code vendorCode ,
			v1.vendor_name vendorName
		FROM
			vendor v1
		LEFT JOIN vendor v2 ON(
			v1.vendor_id = v2.vendor_id
			OR v2.vendor_id = v1.parent_id
		)
		WHERE
			v2.user_id = #{userId,jdbcType=BIGINT}
			and v1.enabled = 1 and v2.enabled = 1
		ORDER BY
			v1.parent_id ASC
	</select>


</mapper>