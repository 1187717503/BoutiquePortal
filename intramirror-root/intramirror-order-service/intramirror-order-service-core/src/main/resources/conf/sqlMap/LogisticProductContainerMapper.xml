<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.intramirror.order.core.mapper.LogisticProductContainerMapper">
  <resultMap id="BaseResultMap" type="com.intramirror.order.api.model.LogisticProductContainer">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="container_id" jdbcType="BIGINT" property="containerId" />
    <result column="shipment_id" jdbcType="BIGINT" property="shipmentId" />
    <result column="logistics_product_id" jdbcType="BIGINT" property="logisticsProductId" />
    <result column="order_line_num" jdbcType="VARCHAR" property="orderLineNum" />
    <result column="vendor_id" jdbcType="BIGINT" property="vendorId" />
    <result column="recieve_status" jdbcType="INTEGER" property="recieveStatus" />
    <result column="version" jdbcType="INTEGER" property="version" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="INTEGER" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, container_id, shipment_id, logistics_product_id, order_line_num, vendor_id, recieve_status, 
    version, create_time, update_time, is_deleted
  </sql>
  <select id="selectByExample" parameterType="com.intramirror.order.api.model.LogisticProductContainerExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from `logistic_product_container`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from `logistic_product_container`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.intramirror.order.api.model.LogisticProductContainer">
    <!--
      WARNING - @mbg.generated
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `logistic_product_container` (container_id, shipment_id, logistics_product_id, 
      order_line_num, vendor_id, recieve_status, 
      version, create_time, update_time, 
      is_deleted)
    values (#{containerId,jdbcType=BIGINT}, #{shipmentId,jdbcType=BIGINT}, #{logisticsProductId,jdbcType=BIGINT}, 
      #{orderLineNum,jdbcType=VARCHAR}, #{vendorId,jdbcType=BIGINT}, #{recieveStatus,jdbcType=INTEGER}, 
      #{version,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.intramirror.order.api.model.LogisticProductContainer">
    <!--
      WARNING - @mbg.generated
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `logistic_product_container`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="containerId != null">
        container_id,
      </if>
      <if test="shipmentId != null">
        shipment_id,
      </if>
      <if test="logisticsProductId != null">
        logistics_product_id,
      </if>
      <if test="orderLineNum != null">
        order_line_num,
      </if>
      <if test="vendorId != null">
        vendor_id,
      </if>
      <if test="recieveStatus != null">
        recieve_status,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="containerId != null">
        #{containerId,jdbcType=BIGINT},
      </if>
      <if test="shipmentId != null">
        #{shipmentId,jdbcType=BIGINT},
      </if>
      <if test="logisticsProductId != null">
        #{logisticsProductId,jdbcType=BIGINT},
      </if>
      <if test="orderLineNum != null">
        #{orderLineNum,jdbcType=VARCHAR},
      </if>
      <if test="vendorId != null">
        #{vendorId,jdbcType=BIGINT},
      </if>
      <if test="recieveStatus != null">
        #{recieveStatus,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.intramirror.order.api.model.LogisticProductContainerExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
    -->
    select count(*) from `logistic_product_container`
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update `logistic_product_container`
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.containerId != null">
        container_id = #{record.containerId,jdbcType=BIGINT},
      </if>
      <if test="record.shipmentId != null">
        shipment_id = #{record.shipmentId,jdbcType=BIGINT},
      </if>
      <if test="record.logisticsProductId != null">
        logistics_product_id = #{record.logisticsProductId,jdbcType=BIGINT},
      </if>
      <if test="record.orderLineNum != null">
        order_line_num = #{record.orderLineNum,jdbcType=VARCHAR},
      </if>
      <if test="record.vendorId != null">
        vendor_id = #{record.vendorId,jdbcType=BIGINT},
      </if>
      <if test="record.recieveStatus != null">
        recieve_status = #{record.recieveStatus,jdbcType=INTEGER},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
    -->
    update `logistic_product_container`
    set id = #{record.id,jdbcType=BIGINT},
      container_id = #{record.containerId,jdbcType=BIGINT},
      shipment_id = #{record.shipmentId,jdbcType=BIGINT},
      logistics_product_id = #{record.logisticsProductId,jdbcType=BIGINT},
      order_line_num = #{record.orderLineNum,jdbcType=VARCHAR},
      vendor_id = #{record.vendorId,jdbcType=BIGINT},
      recieve_status = #{record.recieveStatus,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.intramirror.order.api.model.LogisticProductContainer">
    <!--
      WARNING - @mbg.generated
    -->
    update `logistic_product_container`
    <set>
      <if test="containerId != null">
        container_id = #{containerId,jdbcType=BIGINT},
      </if>
      <if test="shipmentId != null">
        shipment_id = #{shipmentId,jdbcType=BIGINT},
      </if>
      <if test="logisticsProductId != null">
        logistics_product_id = #{logisticsProductId,jdbcType=BIGINT},
      </if>
      <if test="orderLineNum != null">
        order_line_num = #{orderLineNum,jdbcType=VARCHAR},
      </if>
      <if test="vendorId != null">
        vendor_id = #{vendorId,jdbcType=BIGINT},
      </if>
      <if test="recieveStatus != null">
        recieve_status = #{recieveStatus,jdbcType=INTEGER},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.intramirror.order.api.model.LogisticProductContainer">
    <!--
      WARNING - @mbg.generated
    -->
    update `logistic_product_container`
    set container_id = #{containerId,jdbcType=BIGINT},
      shipment_id = #{shipmentId,jdbcType=BIGINT},
      logistics_product_id = #{logisticsProductId,jdbcType=BIGINT},
      order_line_num = #{orderLineNum,jdbcType=VARCHAR},
      vendor_id = #{vendorId,jdbcType=BIGINT},
      recieve_status = #{recieveStatus,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>