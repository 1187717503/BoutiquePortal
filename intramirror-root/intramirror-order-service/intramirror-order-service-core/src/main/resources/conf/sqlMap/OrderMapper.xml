<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.intramirror.order.core.mapper.OrderMapper">

    <select id="getOrderList" resultType="java.util.HashMap" parameterType="java.util.Map">
    select 
    DISTINCT o.order_num,o.order_id,o.created_at,o.`status`,o.current_rate,o.total_sale_price_rmb,o.total_shipping_fee_rmb,o.total_tax_rmb,o.total_rmb,
    l.rec_name,l.rec_mobile,l.user_rec_name,l.user_rec_mobile,l.user_rec_province,l.user_rec_city,l.user_rec_area,l.user_rec_addr,v.vendor_id,
    u.contact_person_name,o.contact_phone as telephone,o.wechat as contact_info,g.`name` as geography_name 
    from logistics_product lp 
    INNER JOIN order_logistics ol ON lp.order_logistics_id = ol.order_logistics_id 
    INNER JOIN `order` o ON o.order_id = ol.order_id   
    LEFT JOIN `user` u ON o.user_id = u.user_id 
    LEFT JOIN logistics l ON lp.order_logistics_id = l.order_logistics_id 
    INNER JOIN shop_product_sku sps ON lp.shop_product_sku_id = sps.shop_product_sku_id 
    INNER JOIN shop_product sp ON sps.shop_product_id = sp.shop_product_id 
    INNER JOIN product p ON sp.product_id = p.product_id  
        
	LEFT JOIN category c ON p.category_id = c.category_id 
	LEFT JOIN brand b ON p.brand_id = b.brand_id 
	LEFT JOIN vendor v ON lp.vendor_id = v.vendor_id 
	LEFT JOIN geography g ON l.geography_id = g.geography_id 
    where lp.`status` = #{status,jdbcType=BIGINT} 
    group By o.order_num 
    ORDER BY o.created_at desc 
    
  </select>


    <select id="getOrderListByOrderNumber" resultType="java.util.HashMap" parameterType="java.util.Map">

        <!-- SELECT  o.order_num,o.order_id,p.name,pp.colorCode,pp.brandID,pspv.`value` as size,p.category_id, -->
        SELECT o.order_num,o.order_id,p.name,pp.colorCode,pp.brandID,pspv.`value` as size,p.category_id,
        s.price,s.in_price,sps.sale_price,lp.amount,lp.shipping_fee,lp.tax_fee,lp.order_line_num,lp.`status`,
        v.vendor_name,p.cover_img,lp.logistics_product_id
        FROM logistics_product lp INNER JOIN order_logistics ol ON lp.order_logistics_id = ol.order_logistics_id
        INNER JOIN `order` o ON ol.order_id = o.order_id
        LEFT JOIN logistics l ON lp.order_logistics_id = l.order_logistics_id
        INNER JOIN shop_product_sku sps ON lp.shop_product_sku_id = sps.shop_product_sku_id
        INNER JOIN shop_product sp ON sps.shop_product_id = sp.shop_product_id
        INNER JOIN product p ON (sp.product_id = p.product_id )
        INNER JOIN sku s ON (s.sku_id = sps.sku_id and s.enabled = 1)
        INNER JOIN sku_property skup on (skup.sku_id = s.sku_id and skup.enabled = 1)
        INNER JOIN product_sku_property_key pspk ON (
        pspk.product_id = p.product_id
        and pspk.product_sku_property_key_id = skup.product_sku_property_key_id
        and pspk.enabled = 1
        ) INNER JOIN product_sku_property_value pspv ON (
        pspv.product_sku_property_key_id = skup.product_sku_property_key_id
        and pspv.product_sku_property_value_id = skup.product_sku_property_value_id
        and pspv.enabled = 1
        ) INNER JOIN vendor v ON (lp.vendor_id = v.vendor_id and v.enabled = 1)
        LEFT JOIN (
        SELECT t_pp.product_id,
        max(case t_pp.key_name when 'ColorCode' then t_pp.`value` else '' end) as colorCode,
        max(case t_pp.key_name when 'BrandID' then t_pp.`value` else '' end) as brandID
        from product_property t_pp
        where t_pp.enabled = 1 and (t_pp.key_name='BrandID' or t_pp.key_name = 'ColorCode')
        group by t_pp.product_id
        ) pp ON p.product_id = pp.product_id
        WHERE o.order_num in
        <foreach collection="orderNumbers" item="orderNumber" index="index"
                 open="(" close=")" separator=",">
            #{orderNumber}
        </foreach>

        and pspk.`name` = 'Size' and lp.`status` = #{status,jdbcType=BIGINT}
        GROUP BY lp.order_line_num
    </select>


    <select id="getOrderListByStatus" resultType="java.util.HashMap" parameterType="java.util.Map">
        SELECT
        o.order_num,o.order_id,o.created_at,o.current_rate,p.name,p.product_id,pp.colorCode,pp.brandID,pspv.`value` as
        size,p.category_id,
        s.price,s.in_price,sps.sale_price,lp.amount,lp.shipping_fee,lp.tax_fee,lp.order_line_num,lp.`status`,
        lp.confirmed_at,lp.est_ship_date,lp.packed_at,lp.shipped_at,s.sku_code,usa.address_country_id,b.english_name as
        brandName,
        l.user_rec_name,l.user_rec_province,l.user_rec_city,l.user_rec_area,l.user_rec_addr,l.user_rec_country,l.geography_id,
        v.vendor_name,v.vendor_id,g.english_name as geography_name,v.address_country_id as
        vendor_address_country_id,p.cover_img,lp.logistics_product_id
        FROM logistics_product lp INNER JOIN order_logistics ol ON lp.order_logistics_id = ol.order_logistics_id
        INNER JOIN `order` o ON ol.order_id = o.order_id
        INNER JOIN user_ship_address usa ON o.user_id = usa.user_id
        LEFT JOIN logistics l ON lp.order_logistics_id = l.order_logistics_id
        INNER JOIN geography g on l.geography_id = g.geography_id
        INNER JOIN shop_product_sku sps ON lp.shop_product_sku_id = sps.shop_product_sku_id
        INNER JOIN shop_product sp ON sps.shop_product_id = sp.shop_product_id
        INNER JOIN product p ON (sp.product_id = p.product_id )
        INNER JOIN brand b ON (p.brand_id = b.brand_id and b.enabled = 1 )
        INNER JOIN sku s ON (s.sku_id = sps.sku_id and s.enabled = 1)
        INNER JOIN sku_property skup on (skup.sku_id = s.sku_id and skup.enabled = 1)
        INNER JOIN product_sku_property_key pspk ON (
        pspk.product_id = p.product_id
        and pspk.product_sku_property_key_id = skup.product_sku_property_key_id
        and pspk.enabled = 1
        ) INNER JOIN product_sku_property_value pspv ON (
        pspv.product_sku_property_key_id = skup.product_sku_property_key_id
        and pspv.product_sku_property_value_id = skup.product_sku_property_value_id
        and pspv.enabled = 1
        ) INNER JOIN vendor v ON (lp.vendor_id = v.vendor_id and v.enabled = 1)
        LEFT JOIN (
        SELECT t_pp.product_id,
        max(case t_pp.key_name when 'ColorCode' then t_pp.`value` else '' end) as colorCode,
        max(case t_pp.key_name when 'BrandID' then t_pp.`value` else '' end) as brandID
        from product_property t_pp
        where t_pp.enabled = 1 and (t_pp.key_name='BrandID' or t_pp.key_name = 'ColorCode')
        group by t_pp.product_id
        ) pp ON p.product_id = pp.product_id
        where pspk.`name` = 'Size' and lp.`status` = #{status,jdbcType=BIGINT}
        and v.vendor_id = #{vendorId,jdbcType=BIGINT}
        GROUP BY lp.order_line_num

        <if test="order_line_num != null">
            order by lp.order_line_num desc
        </if>

        <if test="created_at != null">
            order by o.created_at desc
        </if>

        <if test="confirmed_at != null">
            order by lp.confirmed_at desc
        </if>

        <if test="est_ship_date != null">
            order by lp.est_ship_date desc
        </if>

        <if test="geography_name != null">
            order by g.english_name asc
        </if>
    </select>

    <select id="getOrderListByStatusAndContainerId" resultType="java.util.HashMap" parameterType="java.util.Map">
			SELECT  o.order_num,o.order_id,o.created_at,o.current_rate,p.name,p.product_id,pp.colorCode,pp.brandID,pspv.`value` as size,p.category_id,
			s.price,s.in_price,sps.sale_price,lp.amount,lp.shipping_fee,lp.tax_fee,lp.order_line_num,lp.`status`,b.english_name as brandName,
			v.vendor_name,p.cover_img,lp.logistics_product_id  
			FROM logistics_product lp  
			INNER JOIN container c on lp.container_id = c.container_id 
			INNER JOIN order_logistics ol ON lp.order_logistics_id = ol.order_logistics_id  
			INNER JOIN `order` o ON ol.order_id = o.order_id   
			LEFT JOIN logistics l ON lp.order_logistics_id = l.order_logistics_id   
			INNER JOIN shop_product_sku sps ON lp.shop_product_sku_id = sps.shop_product_sku_id  
			INNER JOIN shop_product sp ON sps.shop_product_id = sp.shop_product_id   
			INNER JOIN product p ON (sp.product_id = p.product_id )  
			INNER JOIN brand b ON (p.brand_id = b.brand_id and b.enabled = 1 )  
			INNER JOIN sku s ON (s.sku_id = sps.sku_id and s.enabled = 1)  
			INNER JOIN sku_property skup on (skup.sku_id = s.sku_id and skup.enabled = 1)  
			INNER JOIN product_sku_property_key pspk ON (
				pspk.product_id = p.product_id 
				and pspk.product_sku_property_key_id = skup.product_sku_property_key_id 
				and pspk.enabled = 1
			) INNER JOIN product_sku_property_value pspv ON (
				pspv.product_sku_property_key_id = skup.product_sku_property_key_id 
				and pspv.product_sku_property_value_id = skup.product_sku_property_value_id 
				and pspv.enabled = 1
			) INNER JOIN vendor v ON (lp.vendor_id = v.vendor_id and v.enabled = 1)
        	LEFT JOIN (
			SELECT t_pp.product_id,
			max(case t_pp.key_name when 'ColorCode' then t_pp.`value` else '' end) as colorCode,
			max(case t_pp.key_name when 'BrandID' then t_pp.`value` else '' end) as brandID 
			from product_property t_pp 
			where t_pp.enabled = 1 and (t_pp.key_name='BrandID' or t_pp.key_name = 'ColorCode') 
			group by t_pp.product_id 
			) pp ON p.product_id = pp.product_id   
			where pspk.`name` = 'Size' 
			and c.container_id =#{containerId,jdbcType=BIGINT} 
			and lp.`status` = #{status,jdbcType=BIGINT}
			and v.vendor_id = #{vendorId,jdbcType=BIGINT}
			GROUP BY lp.order_line_num
  </select>


    <select id="getOrderListByShipmentId" resultType="java.util.HashMap" parameterType="java.util.Map">
			SELECT  o.order_num,o.order_id,o.created_at,o.current_rate,p.name,p.product_id,pp.colorCode,pp.brandID,pspv.`value` as size,p.category_id,
			s.price,s.in_price,sps.sale_price,lp.amount,lp.shipping_fee,lp.tax_fee,lp.order_line_num,lp.`status`,b.english_name as brandName,
			v.vendor_name,p.cover_img,lp.logistics_product_id,c.*  
			FROM logistics_product lp  
			INNER JOIN container c on lp.container_id = c.container_id 
			INNER JOIN order_logistics ol ON lp.order_logistics_id = ol.order_logistics_id  
			INNER JOIN `order` o ON ol.order_id = o.order_id   
			LEFT JOIN logistics l ON lp.order_logistics_id = l.order_logistics_id   
			INNER JOIN shop_product_sku sps ON lp.shop_product_sku_id = sps.shop_product_sku_id  
			INNER JOIN shop_product sp ON sps.shop_product_id = sp.shop_product_id   
			INNER JOIN product p ON (sp.product_id = p.product_id )  
			INNER JOIN brand b ON (p.brand_id = b.brand_id and b.enabled = 1 )  
			INNER JOIN sku s ON (s.sku_id = sps.sku_id and s.enabled = 1)  
			INNER JOIN sku_property skup on (skup.sku_id = s.sku_id and skup.enabled = 1)  
			INNER JOIN product_sku_property_key pspk ON (
				pspk.product_id = p.product_id 
				and pspk.product_sku_property_key_id = skup.product_sku_property_key_id 
				and pspk.enabled = 1
			) INNER JOIN product_sku_property_value pspv ON (
				pspv.product_sku_property_key_id = skup.product_sku_property_key_id 
				and pspv.product_sku_property_value_id = skup.product_sku_property_value_id 
				and pspv.enabled = 1
			) INNER JOIN vendor v ON (lp.vendor_id = v.vendor_id and v.enabled = 1)
        	LEFT JOIN (
			SELECT t_pp.product_id,
			max(case t_pp.key_name when 'ColorCode' then t_pp.`value` else '' end) as colorCode,
			max(case t_pp.key_name when 'BrandID' then t_pp.`value` else '' end) as brandID 
			from product_property t_pp 
			where t_pp.enabled = 1 and (t_pp.key_name='BrandID' or t_pp.key_name = 'ColorCode') 
			group by t_pp.product_id 
			) pp ON p.product_id = pp.product_id   
			where pspk.`name` = 'Size' 
			and c.shipment_id =#{shipment_id,jdbcType=BIGINT} 
			and lp.`status` = #{status,jdbcType=BIGINT}
			and v.vendor_id = #{vendorId,jdbcType=BIGINT}
			GROUP BY lp.order_line_num
  </select>


    <select id="getOrderInfoByCondition" resultType="java.util.HashMap" parameterType="java.util.Map">
        SELECT
        o.order_num,o.order_id,o.created_at,o.current_rate,p.name,p.product_id,pp.colorCode,pp.brandID,pspv.`value` as
        size,p.category_id,
        s.price,s.in_price,sps.sale_price,lp.amount,lp.shipping_fee,lp.tax_fee,lp.order_line_num,lp.`status`,s.sku_code,b.english_name
        as brandName,
        v.vendor_name,p.cover_img,g.english_name as geography_name ,lp.logistics_product_id,v.vendor_id
        FROM logistics_product lp
        INNER JOIN order_logistics ol ON lp.order_logistics_id = ol.order_logistics_id
        INNER JOIN `order` o ON ol.order_id = o.order_id
        INNER JOIN logistics l ON lp.order_logistics_id = l.order_logistics_id
        INNER JOIN geography g on l.geography_id = g.geography_id
        INNER JOIN shop_product_sku sps ON lp.shop_product_sku_id = sps.shop_product_sku_id
        INNER JOIN shop_product sp ON sps.shop_product_id = sp.shop_product_id
        INNER JOIN product p ON (sp.product_id = p.product_id )
        INNER JOIN brand b ON (p.brand_id = b.brand_id and b.enabled = 1 )
        INNER JOIN sku s ON (s.sku_id = sps.sku_id and s.enabled = 1)
        INNER JOIN sku_property skup on (skup.sku_id = s.sku_id and skup.enabled = 1)
        INNER JOIN product_sku_property_key pspk ON (
        pspk.product_id = p.product_id
        and pspk.product_sku_property_key_id = skup.product_sku_property_key_id
        and pspk.enabled = 1
        ) INNER JOIN product_sku_property_value pspv ON (
        pspv.product_sku_property_key_id = skup.product_sku_property_key_id
        and pspv.product_sku_property_value_id = skup.product_sku_property_value_id
        and pspv.enabled = 1
        ) INNER JOIN vendor v ON (lp.vendor_id = v.vendor_id and v.enabled = 1)
        LEFT JOIN (
        SELECT t_pp.product_id,
        max(case t_pp.key_name when 'ColorCode' then t_pp.`value` else '' end) as colorCode,
        max(case t_pp.key_name when 'BrandID' then t_pp.`value` else '' end) as brandID
        from product_property t_pp
        where t_pp.enabled = 1 and (t_pp.key_name='BrandID' or t_pp.key_name = 'ColorCode')
        group by t_pp.product_id
        ) pp ON p.product_id = pp.product_id
        where pspk.`name` = 'Size' and lp.enabled = 1

        <if test="status != null">
            and lp.`status` = #{status,jdbcType=BIGINT}
        </if>
        <if test="vendorId != null">
            and v.vendor_id = #{vendorId,jdbcType=BIGINT}
        </if>
        and lp.order_line_num = #{orderNumber,jdbcType=VARCHAR}
    </select>


    <select id="getOrderPaymentByLogisProductId" resultType="java.util.HashMap" parameterType="java.lang.Long">
            select pt.order_num,lp.amount*lp.sale_price*100 as price,pr.request_id,pr.serial_number,o.pay_way,lp.logistics_product_id 
            from `order` o 
            left join order_logistics ol on o.order_id = ol.order_id 
            left join logistics_product lp on lp.order_logistics_id = ol.order_logistics_id 
            left join payment pt on pt.order_num = ol.order_id 
            left join payment_result pr on pr.payment_id = pt.payment_id 
            where lp.logistics_product_id = #{logisticsProductId,jdbcType=BIGINT} 
    
  </select>
    <!--   根据status统计各个状态的订单数量 -->
    <select id="getOrderByIsvalidCount" resultType="java.lang.Integer" parameterType="java.util.Map">
		 SELECT COUNT(1) FROM(
      SELECT  o.order_num  
			FROM logistics_product lp  INNER JOIN order_logistics ol ON lp.order_logistics_id = ol.order_logistics_id  
			INNER JOIN `order` o ON ol.order_id = o.order_id   
			LEFT JOIN logistics l ON lp.order_logistics_id = l.order_logistics_id   
			INNER JOIN shop_product_sku sps ON lp.shop_product_sku_id = sps.shop_product_sku_id  
			INNER JOIN shop_product sp ON sps.shop_product_id = sp.shop_product_id   
			INNER JOIN product p ON (sp.product_id = p.product_id )  
			INNER JOIN sku s ON (s.sku_id = sps.sku_id and s.enabled = 1)  
			INNER JOIN sku_property skup on (skup.sku_id = s.sku_id and skup.enabled = 1)  
			INNER JOIN product_sku_property_key pspk ON (
				pspk.product_id = p.product_id 
				and pspk.product_sku_property_key_id = skup.product_sku_property_key_id 
				and pspk.enabled = 1
			) INNER JOIN product_sku_property_value pspv ON (
				pspv.product_sku_property_key_id = skup.product_sku_property_key_id 
				and pspv.product_sku_property_value_id = skup.product_sku_property_value_id 
				and pspv.enabled = 1
			) INNER JOIN vendor v ON (lp.vendor_id = v.vendor_id and v.enabled = 1)
        	LEFT JOIN (
			SELECT t_pp.product_id,
			max(case t_pp.key_name when 'ColorCode' then t_pp.`value` else '' end) as colorCode,
			max(case t_pp.key_name when 'BrandID' then t_pp.`value` else '' end) as brandID 
			from product_property t_pp 
			where t_pp.enabled = 1 and (t_pp.key_name='BrandID' or t_pp.key_name = 'ColorCode') 
			group by t_pp.product_id 
			) pp ON p.product_id = pp.product_id   
			where pspk.`name` = 'Size' and  lp.`status` = #{status,jdbcType=BIGINT} 
			and v.vendor_id = #{vendorId,jdbcType=BIGINT}
			GROUP BY lp.order_line_num) AS DD
  </select>
    <!--   根据订单号查询物流ID -->
    <select id="getOrderPaymentInfoByOrderId" resultType="java.util.HashMap" parameterType="java.lang.Integer">
	SELECT order_logistics_id FROM order_logistics ol
	LEFT JOIN `order` o  ON o.order_id =ol.order_id
	WHERE o.order_id= #{orderId,jdbcType=BIGINT} 
</select>

    <!-- 根据订单号查询支付信息 -->
    <select id="getPaymentInfoByOrderId" resultType="java.util.HashMap" parameterType="java.lang.Integer">
		select t5.pay_way,t1.order_num,sum(t4.amount*t4.sale_price) as price,t2.request_id,t2.serial_number  ,t4.logistics_product_id from payment t1,payment_result t2,order_logistics t3,logistics_product t4 ,`order` t5 
where t1.payment_id = t2.payment_id and t3.order_id = t1.order_num
and t3.order_logistics_id = t4.order_logistics_id and t5.order_id = t3.order_id group by t2.request_id,t2.serial_number
and t1.order_num =  #{orderId,jdbcType=BIGINT} 
</select>

    <select id="getOrderByShipment" resultType="com.intramirror.order.api.model.Shipment">
	 select g.`name` as ship_to_geography,u.username as consignee,l.user_rec_addr as ship_to_addr,l.user_rec_area as ship_to_district,
		l.user_rec_city as ship_to_city,l.user_rec_province as ship_to_province,o.`status`,l.user_rec_country as ship_to_country
		from logistics_product lp
		INNER JOIN order_logistics ol ON lp.order_logistics_id = ol.order_logistics_id 
		INNER JOIN `order` o ON o.order_id = ol.order_id   
		LEFT JOIN logistics l ON lp.order_logistics_id = l.order_logistics_id 
		LEFT JOIN geography g ON l.geography_id = g.geography_id 
		LEFT JOIN `user` u ON o.user_id = u.user_id
		where lp.logistics_product_id =  #{logisticsProductId,jdbcType=BIGINT} 
 </select>

    <select id="getShippedOrderListByStatus" resultType="java.util.HashMap" parameterType="java.util.Map">
        SELECT

        <choose>
            <when test="count == 1">
                lp.order_line_num
            </when>
            <otherwise>
                o.created_at AS order_date,o.current_rate,pp.colorCode,pp.brandID,pspv.`value` as size,
                s.price,s.in_price,sps.sale_price,lp.amount,lp.shipping_fee,lp.tax_fee,lp.order_line_num,lp.`status`,
                lp.shipped_at AS shipped_date,sm.shipment_no,s.sku_code,b.english_name as brandName,
                v.vendor_name,sm.shipment_no,g.english_name as geography_name,p.cover_img
            </otherwise>
        </choose>

        FROM logistics_product lp INNER JOIN order_logistics ol ON lp.order_logistics_id = ol.order_logistics_id
        INNER JOIN `order` o ON ol.order_id = o.order_id
        INNER JOIN user_ship_address usa ON o.user_id = usa.user_id
        LEFT JOIN logistics l ON lp.order_logistics_id = l.order_logistics_id
        INNER JOIN geography g on l.geography_id = g.geography_id
        INNER JOIN shop_product_sku sps ON lp.shop_product_sku_id = sps.shop_product_sku_id
        INNER JOIN shop_product sp ON sps.shop_product_id = sp.shop_product_id
        INNER JOIN product p ON (sp.product_id = p.product_id )
        INNER JOIN brand b ON (p.brand_id = b.brand_id and b.enabled = 1 )
        INNER JOIN sku s ON (s.sku_id = sps.sku_id and s.enabled = 1)
        INNER JOIN sku_property skup on (skup.sku_id = s.sku_id and skup.enabled = 1)
        INNER JOIN product_sku_property_key pspk ON (
        pspk.product_id = p.product_id
        and pspk.product_sku_property_key_id = skup.product_sku_property_key_id
        and pspk.enabled = 1
        ) INNER JOIN product_sku_property_value pspv ON (
        pspv.product_sku_property_key_id = skup.product_sku_property_key_id
        and pspv.product_sku_property_value_id = skup.product_sku_property_value_id
        and pspv.enabled = 1
        ) INNER JOIN vendor v ON (lp.vendor_id = v.vendor_id and v.enabled = 1)
        LEFT JOIN (
        SELECT t_pp.product_id,
        max(case t_pp.key_name when 'ColorCode' then t_pp.`value` else '' end) as colorCode,
        max(case t_pp.key_name when 'BrandID' then t_pp.`value` else '' end) as brandID
        from product_property t_pp
        where t_pp.enabled = 1 and (t_pp.key_name='BrandID' or t_pp.key_name = 'ColorCode')
        group by t_pp.product_id
        ) pp ON p.product_id = pp.product_id
        LEFT JOIN shipment sm on sm.vendor_id = v.vendor_id
        where pspk.`name` = 'Size' and (lp.`status` = 3 OR lp.`status` = 4)
        <!--and v.vendor_id = #{vendorId,jdbcType=BIGINT}-->
        <if test="shippedParam.orderLineNo!=null and shippedParam.orderLineNo!=''">
            and lp.order_line_num=#{shippedParam.orderLineNo}
        </if>
        <if test="shippedParam.brandID!=null and shippedParam.brandID!=''">
            and pp.brandID=#{shippedParam.brandID}
        </if>
        <if test="shippedParam.colorCode!=null and shippedParam.colorCode!=''">
            and pp.colorCode=#{shippedParam.colorCode}
        </if>
        <if test="shippedParam.dateType!= null and shippedParam.dateType!='' and shippedParam.dateType == '0'.toString()">
            and (o.created_at between #{shippedParam.startDate} and #{shippedParam.endDate})
        </if>
        <if test="shippedParam.dateType!= null and shippedParam.dateType!='' and shippedParam.dateType == '1'.toString()">
            and (lp.shipped_at between #{shippedParam.startDate} and #{shippedParam.endDate})
        </if>
        GROUP BY lp.order_line_num
        <choose>
            <when test="count == 1">

            </when>
            <otherwise>
                limit #{startPage},#{endPage}
            </otherwise>
        </choose>
    </select>

    <select id="getShipmentDetails" resultType="java.util.HashMap" parameterType="java.util.Map">
		SELECT  o.order_num,lp.vendor_id,l.user_rec_name AS consignee,l.user_rec_addr AS shipToAddr,l.user_rec_area AS shipToDistrict
	,l.user_rec_city AS shipToCity,l.user_rec_province AS shipToProvince,l.user_rec_country AS shipToCountry,v.address_country_id AS consigner_country_id,us.address_country_id AS consignee_country_id,g.english_name AS shipToGeography,lp.logistics_product_id
				FROM logistics_product lp  
				INNER JOIN order_logistics ol ON lp.order_logistics_id = ol.order_logistics_id  
				INNER JOIN `order` o ON ol.order_id = o.order_id   
				INNER JOIN logistics l ON lp.order_logistics_id = l.order_logistics_id   
				INNER JOIN geography g on l.geography_id = g.geography_id
				INNER JOIN `user` u on o.user_id= u.user_id
				INNER JOIN user_ship_address us on (us.user_id = u.user_id)  
				INNER JOIN shop_product_sku sps ON lp.shop_product_sku_id = sps.shop_product_sku_id  
				INNER JOIN shop_product sp ON sps.shop_product_id = sp.shop_product_id   
				INNER JOIN product p ON (sp.product_id = p.product_id ) 
				INNER JOIN brand b ON (p.brand_id = b.brand_id and b.enabled = 1 )  
				INNER JOIN sku s ON (s.sku_id = sps.sku_id and s.enabled = 1) 
				INNER JOIN sku_property skup on (skup.sku_id = s.sku_id and skup.enabled = 1)  
				INNER JOIN product_sku_property_key pspk ON (
					pspk.product_id = p.product_id 
					and pspk.product_sku_property_key_id = skup.product_sku_property_key_id 
					and pspk.enabled = 1
				) INNER JOIN product_sku_property_value pspv ON (
					pspv.product_sku_property_key_id = skup.product_sku_property_key_id 
					and pspv.product_sku_property_value_id = skup.product_sku_property_value_id   
					and pspv.enabled = 1
				) INNER JOIN vendor v ON (lp.vendor_id = v.vendor_id and v.enabled = 1)
	        	LEFT JOIN (
				SELECT t_pp.product_id,
				max(case t_pp.key_name when 'ColorCode' then t_pp.`value` else '' end) as colorCode,
				max(case t_pp.key_name when 'BrandID' then t_pp.`value` else '' end) as brandID 
				from product_property t_pp 
				where t_pp.enabled = 1 and (t_pp.key_name='BrandID' or t_pp.key_name = 'ColorCode') 
				group by t_pp.product_id 
				) pp ON p.product_id = pp.product_id   
				where pspk.`name` = 'Size' and lp.enabled = 1 
				and lp.order_line_num =  #{orderNumber,jdbcType=VARCHAR};
	</select>
</mapper>