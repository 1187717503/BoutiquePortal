<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.intramirror.product.core.mapper.ProductPropertyMapper">
    <resultMap id="BaseResultMap" type="com.intramirror.product.api.model.ProductProperty">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="product_property_id" property="productPropertyId" jdbcType="BIGINT"/>
        <result column="category_product_property_id" property="categoryProductPropertyId" jdbcType="BIGINT"/>
        <result column="product_id" property="productId" jdbcType="BIGINT"/>
        <result column="key_name" property="keyName" jdbcType="VARCHAR"/>
        <result column="type" property="type" jdbcType="TINYINT"/>
        <result column="value" property="value" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="enabled" property="enabled" jdbcType="BIT"/>
    </resultMap>
    <sql id="selectColumn">
    product_property_id, category_product_property_id, product_id, key_name, type, value,
    remark, created_at, updated_at, enabled
  </sql>
    <sql id="selectTable">
    product_property pp
  </sql>

    <!--max(case t_pp.key_name when 'BestSeller' then t_pp.`value` else '' end) as bestSeller,-->
    <!--max(case t_pp.key_name when 'NewThisWeek' then t_pp.`value` else '' end) as newThisWeek,-->
    <!--max(case t_pp.key_name when 'Recommend' then t_pp.`value` else '' end) as recomment,-->
    <!--max(case t_pp.key_name when 'SeasonCode' then t_pp.`value` else '' end) as seasonCode-->
    <select id="getProductPropertyByBrandIDAndColorCode" resultType="java.util.HashMap">
        SELECT pp.product_id,max(case pp.key_name when 'ColorCode' then pp.`value` else '' end) AS colorCode,
        max(case pp2.key_name when 'BrandID' then pp2.`value` else '' end) AS brandID
        FROM  product_property pp INNER JOIN product_property pp2 ON pp.product_id = pp2.product_id WHERE
        pp.key_name = 'ColorCode' and pp.`value` = #{colorCode} AND
        pp2.key_name = 'BrandID' and pp2.`value` = #{brandID} GROUP BY pp.product_id;
    </select>


    <select id="selectByProductId" resultType="java.util.HashMap" parameterType="java.util.Map">
        SELECT p.product_id,p.key_name,p.`value` FROM product_property p
        WHERE (p.key_name = 'BrandID' or p.key_name = 'ColorCode') and p.product_id in
        <foreach collection="productIds" item="productId" index="index"
                 open="(" close=")" separator=",">
            #{productId}
        </foreach>
    </select>

    <select id="getProductPropertyValueByBrandIdAndColorCode" resultType="java.util.HashMap">
        SELECT DISTINCT pp1.product_id,sp.shop_product_id,sp.shop_category_id,p.vendor_id,v.vendor_name,pp1.`value` AS BrandID,pp2.`value` AS ColorCode,sku.price,sku.in_price
        FROM product_property pp1
        LEFT JOIN product_property pp2 ON pp2.product_id = pp1.product_id
        LEFT JOIN product p ON p.product_id=pp1.product_id
        LEFT JOIN sku ON p.product_id =sku.product_id
        LEFT JOIN shop_product sp ON sp.product_id =pp1.product_id
        LEFT JOIN shop s ON s.shop_id=sp.shop_id
        LEFT JOIN vendor v ON v.vendor_id =p.vendor_id
        WHERE pp1.enabled = 1 AND pp2.enabled = 1 AND p.enabled = 1 AND v.enabled = 1 AND sp.enabled=1 AND sku.enabled =1
        AND pp1.key_name = 'BrandID'
        AND pp2.key_name = 'ColorCode'
        <if test="brandID!=null and brandID!=''">
            AND pp1.`value` LIKE CONCAT('%', #{brandID}, '%')
        </if>
        <if test="colorCode!=null and colorCode!=''">
            AND pp2.`value` LIKE CONCAT('%', #{colorCode}, '%')
        </if>
    </select>


    <select id="getProductPropertyValueByProductId" resultType="java.util.HashMap">
        SELECT t_pp.product_id,
        max(case t_pp.key_name when 'ColorCode' then t_pp.`value` else '' end) as colorCode,
        max(case t_pp.key_name when 'BrandID' then t_pp.`value` else '' end) as brandID
        from product_property t_pp
        where t_pp.enabled = 1 and (t_pp.key_name='BrandID' or t_pp.key_name = 'ColorCode') and t_pp.product_id = #{productId}
        group by t_pp.product_id
    </select>
</mapper>