<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.intramirror.product.core.mapper.ProductManagementMapper">

    <select id="listProductDetailInfo" parameterType="com.intramirror.product.api.model.SearchCondition" resultType="java.util.HashMap">
        SELECT
        product.product_id,
        product.spu_id,
        boutique_image.upload,
        shop_product.shop_product_id,
        shop_product.sale_at,
        product.status AS product_status,
        shop_product.status AS shop_product_status,
        brand.english_name AS brand_name,
        vendor.vendor_name AS boutique,
        product.product_code AS boutique_id,
        product.season_code AS season_code,
        product.cover_img,
        boutique_image.image,
        boutique_image.fail_image,
        product.description_img,
        product.category_id,
        <if test="(stock != null and stock != 0) or (minStock !=null and maxStock !=null)">
            view_prod_store_sum.store AS totalStore,
        </if>
        product.designer_id AS designer_id,
        product.color_code AS color_code,
        product.min_retail_price AS retail_price,
        product.min_boutique_price AS boutique_price,
        product.min_im_price AS im_price,
        product.preview_im_price AS preview_price,
        shop_product.min_sale_price AS sale_price,
        product.img_modified AS modelImage,
        product.updated_at,
        product.last_check,
        spu.desc_modify,
        spu.img_modified,
        spu.vendor_id,
        spu.cover_img as spu_cover_img,
        CONVERT(1 - product.min_boutique_price / product.min_retail_price * 1.22, DECIMAL(10, 2)) AS boutique_discount,
        CONVERT(1 - product.min_im_price / product.min_retail_price , DECIMAL(10, 2)) AS im_discount,
        CONVERT(1 - product.preview_im_price / product.min_retail_price , DECIMAL(10, 2)) AS preview_discount,
        CONVERT(1 - shop_product.min_sale_price / product.min_retail_price, DECIMAL(10, 2)) AS sale_discount
        FROM product
        LEFT JOIN boutique_image ON boutique_image.product_id = product.product_id
        LEFT JOIN shop_product ON shop_product.shop_id = 65 AND shop_product.enabled = TRUE AND shop_product.product_id = product.product_id
        INNER JOIN vendor ON product.vendor_id = vendor.vendor_id AND product.enabled = TRUE
        INNER JOIN brand ON brand.brand_id = product.brand_id AND brand.enabled = TRUE
        <if test="(stock != null and stock != 0) or (minStock !=null and maxStock !=null)">
            LEFT JOIN view_prod_store_sum ON view_prod_store_sum.product_id = product.product_id
        </if>
        <if test="exception !=  null and exception != 0">
            LEFT JOIN (SELECT
            product_id,
            sku_id,
            max(status) AS status
            FROM product_exception
            GROUP BY product_id) exception
            ON product.product_id = exception.product_id
        </if>
        <choose>
            <when test="spuModifyFilter ==  null or spuModifyFilter == 0">
                LEFT JOIN spu ON spu.spu_id=product.spu_id
            </when>
            <when test="spuModifyFilter == 1">
                INNER JOIN spu ON spu.spu_id=product.spu_id
                AND (spu.desc_modify = TRUE OR spu.img_modified = TRUE OR spu.vendor_id = -1)
            </when>
            <otherwise>
                INNER JOIN spu ON spu.spu_id=product.spu_id
                AND (spu.desc_modify IS NULL OR spu.desc_modify =FALSE )
                AND (spu.img_modified IS NULL OR spu.img_modified =FALSE )
                AND (spu.vendor_id != '-1' )
            </otherwise>
        </choose>
        <!--        <if test="minIMDiscount != null or minBoutiqueDiscount != null">
                    INNER JOIN (
                    SELECT
                    sku.price AS retail_price,
                    sku.in_price AS boutique_price,
                    sku.im_price AS im_price,
                    sku.product_id AS product_id,
                    CONVERT(1 - sku.in_price / sku.price * 1.22, DECIMAL(10, 2)) * 100 AS boutique_discount,
                    CONVERT(1 - sku.im_price / sku.price, DECIMAL(10, 2)) * 100 AS im_discount
                    FROM sku
                    WHERE sku.enabled = TRUE
                    GROUP BY sku.product_id
                    ) price ON price.product_id = product.product_id
                </if>-->
        WHERE 1=1
        <if test="productIds != null">
            AND product.product_id
            <choose>
                <when test="tagId == 0">
                    NOT IN
                </when>
                <otherwise>
                    IN
                </otherwise>
            </choose>
            <foreach item="item" index="index" collection="productIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="productStatus != -1">
            <choose>
                <when test="productStatus == 2 or productStatus == 4">
                    AND product.status IN (4,2)
                </when>
                <otherwise>
                    AND product.status = #{productStatus}
                </otherwise>
            </choose>
            <choose>
                <when test="shopProductStatus == -1">
                    AND shop_product.status IS NULL
                </when>
                <otherwise>
                    AND shop_product.status = #{shopProductStatus}
                </otherwise>
            </choose>
        </if>
        <choose>
            <when test="(stock == null or stock == 0) and (minStock ==null or maxStock ==null)">

            </when>
            <when test="minStock !=null and maxStock !=null">
                AND view_prod_store_sum.store BETWEEN #{minStock} AND #{maxStock}
            </when>
            <when test="stock == 1">
                AND view_prod_store_sum.store > 0
            </when>
            <otherwise>
                AND view_prod_store_sum.store &lt;= 0
            </otherwise>
        </choose>
        <if test="brandId != null">
            AND brand.brand_id IN
            <foreach item="item" index="index" collection="brandId" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="categoryId != null">
            AND product.category_id IN
            <foreach item="item" index="index" collection="categoryId" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="season != null">
            AND product.season_code = #{season}
        </if>
        <if test="boutiqueId != null">
            AND product.product_code LIKE "%"#{boutiqueId}"%"
        </if>
        <if test="vendorId != null">
            AND vendor.vendor_id IN
            <foreach item="item" index="index" collection="vendorId" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <choose>
            <when test="image == null or image == 0">

            </when>
            <when test="image == 1">
                AND (length(product.cover_img) >= 5 AND length(product.description_img ) >= 5)
            </when>
            <otherwise>
                AND (length(product.cover_img) &lt; 5 OR length(product.description_img) &lt; 5 )
            </otherwise>
        </choose>
        <choose>
            <when test="modelImage == null or modelImage == 0">

            </when>
            <when test="modelImage == 1">
                AND product.img_modified = 1
            </when>
            <otherwise>
                AND product.img_modified = 0
            </otherwise>
        </choose>
        <choose>
            <when test="streetImage == null or streetImage == 0">

            </when>
            <when test="streetImage == 1">

            </when>
            <otherwise>

            </otherwise>
        </choose>
        <if test="designerId != null">
            AND product.designer_id LIKE "%"#{designerId}"%"
        </if>
        <if test="colorCode != null">
            AND product.color_code = #{colorCode}
        </if>
        <choose>
            <when test="exception == null or exception == 0">

            </when>
            <when test="exception == 1">
                AND exception.status = 1
            </when>
            <otherwise>
                AND (exception.status IS NULL or exception.status != 1)
            </otherwise>
        </choose>
        <if test="minIMDiscount != null and maxIMDiscount != null">
            AND CONVERT(1 - product.min_im_price / product.min_retail_price , DECIMAL(10, 2)) * 100 BETWEEN #{minIMDiscount} AND
            #{maxIMDiscount}
        </if>
        <if test="minBoutiqueDiscount != null and maxBoutiqueDiscount != null">
            AND CONVERT(1 - product.min_boutique_price / product.min_retail_price * 1.22, DECIMAL(10, 2)) * 100 BETWEEN #{minBoutiqueDiscount} AND
            #{maxBoutiqueDiscount}
        </if>
        <if test="minPrice != null and maxPrice != null">
            AND ((product.preview_im_price BETWEEN #{minPrice} AND #{maxPrice} ) OR ( product.preview_im_price IS NULL AND product.min_im_price BETWEEN
            #{minPrice} AND #{maxPrice}))
        </if>
        <if test="saleAtFrom != null and saleAtTo != null">
            AND unix_timestamp(shop_product.sale_at) BETWEEN #{saleAtFrom} AND #{saleAtTo}
        </if>
        ORDER BY
        <choose>
            <when test="orderBy == 'boutique'">
                vendor.vendor_name
            </when>
            <when test="orderBy == 'boutiqueId'">
                product.product_code
            </when>
            <when test="orderBy == 'season'">
                product.season_code
            </when>
            <when test="orderBy == 'designIdAndColorCode'">
                CONCAT(product.designer_id, product.color_code)
            </when>
            <otherwise>
                product.updated_at
            </otherwise>
        </choose>

        <if test="desc == 1 or desc == null">
            DESC
        </if>
        LIMIT #{start}, #{count};
    </select>

    <select id="listProductException" resultType="java.util.Map" parameterType="java.util.List">
        select * from boutique_exception be where be.product_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item.product_id}
        </foreach>
        order by be.updated_at desc
    </select>

    <select id="getProductStateByProductId" parameterType="Long" resultType="java.util.HashMap">
        SELECT
        product.product_id,
        product.product_code AS boutique_id,
        product.status AS product_status,
        shop_product.status AS shop_product_status
        FROM product
        LEFT JOIN shop_product ON product.product_id = shop_product.product_id AND shop_product.shop_id = 65 AND shop_product.enabled = 1
        WHERE product.product_id = #{product_id} AND product.enabled = TRUE;
    </select>

    <select id="listProductStateByProductIds" resultType="java.util.HashMap">
        SELECT
        product.product_id,
        shop_product.shop_product_id,
        product.product_code AS boutique_id,
        product.status AS product_status,
        shop_product.status AS shop_product_status
        FROM product
        LEFT JOIN shop_product ON product.product_id = shop_product.product_id AND shop_product.shop_id = 65 AND shop_product.enabled = 1
        WHERE product.product_id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND product.enabled = TRUE ;
    </select>
    <select id="listPriceByProductList" parameterType="java.util.List" resultType="java.util.Map">
        SELECT
        sku.sku_id,
        CONVERT(sku.price,DECIMAL(10,2)) AS retail_price,
        CONVERT(sku.in_price,DECIMAL(10,2)) AS boutique_price,
        CONVERT(sku.im_price,DECIMAL(10,2)) AS im_price,
        CONVERT(shop_product_sku.sale_price,DECIMAL(10,2)) AS sale_price,
        sku.product_id
        FROM sku
        LEFT JOIN shop_product_sku ON ( shop_product_sku.sku_id = sku.sku_id AND shop_product_sku.enabled = TRUE )
        WHERE (sku.product_id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item.product_id}
        </foreach>
        AND sku.enabled = 1)
        GROUP BY sku.product_id
    </select>

    <select id="countBoutiqueException" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(*) as count from (
        select distinct p.product_id from product p
        inner join shop_product sp on ((p.`status` = 4 or p.`status` = 2) and sp.`status` = 2)
        inner join boutique_exception be on (be.product_id = p.product_id)
        where p.enabled =1 and be.type = #{type}) c;
    </select>

    <select id="listAllProductCountGounpByState" parameterType="com.intramirror.product.api.model.SearchCondition" resultType="Map">
        SELECT
        product.status AS product_status,
        shop_product.status AS shop_product_status,
        COUNT(product.status) AS count
        FROM product
        LEFT JOIN shop_product ON shop_product.product_id = product.product_id AND shop_product.enabled = TRUE
        <if test="brandId != null">
            INNER JOIN brand ON brand.brand_id = product.brand_id AND brand.enabled = TRUE
        </if>
        <if test="vendorId != null">
            INNER JOIN vendor ON product.vendor_id = vendor.vendor_id AND vendor.enabled = TRUE
        </if>
        <if test="(stock != null and stock != 0) or (minStock !=null and maxStock !=null)">
            LEFT JOIN view_prod_store_sum ON view_prod_store_sum.product_id = product.product_id
        </if>
        <if test="exception !=  null and exception != 0">
            LEFT JOIN (SELECT
            product_id,
            sku_id,
            max(status) AS status
            FROM product_exception
            GROUP BY product_id) exception
            ON product.product_id = exception.product_id
        </if>
        <choose>
            <when test="spuModifyFilter ==  null or spuModifyFilter == 0">
                LEFT JOIN spu ON spu.spu_id=product.spu_id
            </when>
            <when test="spuModifyFilter == 1">
                INNER JOIN spu ON spu.spu_id=product.spu_id
                AND (spu.desc_modify = TRUE OR spu.img_modified = TRUE OR spu.vendor_id = -1)
            </when>
            <otherwise>
                INNER JOIN spu ON spu.spu_id=product.spu_id
                AND (spu.desc_modify IS NULL OR spu.desc_modify =FALSE )
                AND (spu.img_modified IS NULL OR spu.img_modified =FALSE )
                AND (spu.vendor_id != '-1' )
            </otherwise>
        </choose>
        WHERE product.enabled = TRUE
        <if test="productIds != null">
            AND product.product_id
            <choose>
                <when test="tagId == 0">
                    NOT IN
                </when>
                <otherwise>
                    IN
                </otherwise>
            </choose>

            <foreach item="item" index="index" collection="productIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <choose>
            <when test="(stock == null or stock == 0) and (minStock ==null or maxStock ==null)">

            </when>
            <when test="minStock !=null and maxStock !=null">
                AND view_prod_store_sum.store BETWEEN #{minStock} AND #{maxStock}
            </when>
            <when test="stock == 1">
                AND view_prod_store_sum.store > 0
            </when>
            <otherwise>
                AND view_prod_store_sum.store &lt;= 0
            </otherwise>
        </choose>
        <if test="brandId != null">
            AND brand.brand_id IN
            <foreach item="item" index="index" collection="brandId" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="categoryId != null">
            AND product.category_id IN
            <foreach item="item" index="index" collection="categoryId" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="season != null">
            AND product.season_code = #{season}
        </if>
        <if test="boutiqueId != null">
            AND product.product_code LIKE "%"#{boutiqueId}"%"
        </if>
        <if test="vendorId != null">
            AND vendor.vendor_id IN
            <foreach item="item" index="index" collection="vendorId" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <choose>
            <when test="image == null or image == 0">

            </when>
            <when test="image == 1">
                AND (length(product.cover_img) >= 5 AND length(product.description_img ) >= 5)
            </when>
            <otherwise>
                AND (length(product.cover_img)&lt; 5 OR length(product.cover_img) &lt; 5 )
            </otherwise>
        </choose>
        <choose>
            <when test="modelImage == null or modelImage == 0">

            </when>
            <when test="modelImage == 1">
                AND product.img_modified = 1
            </when>
            <otherwise>
                AND product.img_modified = 0
            </otherwise>
        </choose>
        <choose>
            <when test="streetImage == null or streetImage == 0">

            </when>
            <when test="streetImage == 1">

            </when>
            <otherwise>

            </otherwise>
        </choose>
        <if test="designerId != null">
            AND product.designer_id LIKE "%"#{designerId}"%"
        </if>
        <if test="colorCode != null">
            AND product.color_code = #{colorCode}
        </if>
        <choose>
            <when test="exception == null or exception == 0">

            </when>
            <when test="exception == 1">
                AND exception.status = 1
            </when>
            <otherwise>
                AND (exception.status IS NULL or exception.status != 1)
            </otherwise>
        </choose>
        <if test="minIMDiscount != null and maxIMDiscount != null">
            AND CONVERT(1 - product.min_im_price / product.min_retail_price , DECIMAL(10, 2)) * 100 BETWEEN #{minIMDiscount} AND
            #{maxIMDiscount}
        </if>
        <if test="minBoutiqueDiscount != null and maxBoutiqueDiscount != null">
            AND CONVERT(1 - product.min_boutique_price / product.min_retail_price * 1.22, DECIMAL(10, 2)) * 100 BETWEEN #{minBoutiqueDiscount} AND
            #{maxBoutiqueDiscount}
        </if>
        <if test="saleAtFrom != null and saleAtTo != null">
            AND unix_timestamp(shop_product.sale_at) BETWEEN #{saleAtFrom} AND #{saleAtTo}
        </if>

        GROUP BY product.status, shop_product.status;
    </select>

    <select id="listShopProductIdMappingByProductIds" resultType="Map">
        SELECT
        product.status AS product_status,
        shop_product.status AS shop_product_status,
        COUNT(product.status) AS count
        FROM product
        LEFT JOIN shop_product ON shop_product.product_id = product.product_id AND shop_product.enabled = TRUE
        WHERE product.product_id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND product.enabled = TRUE ;
    </select>

</mapper>