<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.intramirror.product.core.mapper.SeasonMapper" >
  <resultMap id="BaseResultMap" type="com.intramirror.product.api.model.Season" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="season_code" property="seasonCode" jdbcType="VARCHAR" />
    <result column="chinese_desc" property="chineseDesc" jdbcType="VARCHAR" />
    <result column="enabled" property="enabled" jdbcType="INTEGER" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    season_code, chinese_desc, enabled, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from season
    where season_code = #{seasonCode,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from season
    where season_code = #{seasonCode,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.intramirror.product.api.model.Season" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into season (season_code, chinese_desc, enabled, 
      created_at, updated_at)
    values (#{seasonCode,jdbcType=VARCHAR}, #{chineseDesc,jdbcType=VARCHAR}, #{enabled,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.intramirror.product.api.model.Season" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into season
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="seasonCode != null" >
        season_code,
      </if>
      <if test="chineseDesc != null" >
        chinese_desc,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="seasonCode != null" >
        #{seasonCode,jdbcType=VARCHAR},
      </if>
      <if test="chineseDesc != null" >
        #{chineseDesc,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.intramirror.product.api.model.Season" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update season
    <set >
      <if test="chineseDesc != null" >
        chinese_desc = #{chineseDesc,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where season_code = #{seasonCode,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.intramirror.product.api.model.Season" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update season
    set chinese_desc = #{chineseDesc,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where season_code = #{seasonCode,jdbcType=VARCHAR}
  </update>

  <select id="queryRuleByHasSeason" resultType="java.util.Map" parameterType="java.util.Map">

    select pcrsg.`name`,pcrsg.price_change_rule_id,pcrsg.season_code from price_change_rule_season_group pcrsg where pcrsg.price_change_rule_id in (
                select pcr.price_change_rule_id from price_change_rule pcr where pcr.price_type = #{price_type,jdbcType=INTEGER} and pcr.status = #{status,jdbcType=INTEGER}
    ) and pcrsg.enabled = 1
  </select>

  <select id="queryRuleByNotHasSesaon" resultType="java.util.Map" parameterType="java.util.Map">

    select season_code from season where enabled = 1 and season_code not in (
                    select distinct season_code from price_change_rule_season_group pcrsg where pcrsg.price_change_rule_id in (
                select pcr.price_change_rule_id from price_change_rule pcr where pcr.price_type =  #{price_type,jdbcType=INTEGER} and pcr.status = #{status,jdbcType=INTEGER}
            ) and pcrsg.enabled = 1
    )
  </select>

  <select id="queryRuleByBrandZero" resultType="java.util.Map" parameterType="java.util.Map">

    select pcrcb.price_change_rule_category_brand_id,pcrcb.brand_id,b.english_name,pcrcb.category_id,c.`name`,c.parent_id,pcrcb.discount_percentage from price_change_rule_category_brand pcrcb
        inner join category c on (c.category_id = pcrcb.category_id and c.enabled = 1)
        left join brand b on (b.brand_id = pcrcb.brand_id and b.enabled = 1)
        where pcrcb.exception_flag = #{exception_flag,jdbcType=INTEGER} and pcrcb.price_change_rule_id = #{price_change_rule_id,jdbcType=INTEGER}
        <if test="english_name != null and english_name != ''">
          <bind name="brandName" value="'%' + english_name + '%'" />
          and b.english_name like #{brandName}
        </if>
  </select>

  <select id="queryRuleByBrandOne" resultType="java.util.Map" parameterType="java.util.Map">

    select c.`name` as cName,c2.`name` as c2Name,c1.`name` as c1Name,pcrcb.price_change_rule_category_brand_id,pcrcb.brand_id,b.english_name,pcrcb.category_id,c.`name`,c.parent_id,pcrcb.discount_percentage from price_change_rule_category_brand pcrcb
    inner join category c on (c.category_id = pcrcb.category_id and c.enabled = 1)
    inner join brand b on (b.brand_id = pcrcb.brand_id and b.enabled = 1)
    left join category c2 on (c2.category_id = c.parent_id and c2.enabled = 1)
    left join category c1 on (c1.category_id = c2.parent_id and c1.enabled = 1)
    where pcrcb.exception_flag = #{exception_flag,jdbcType=INTEGER} and pcrcb.price_change_rule_id = #{price_change_rule_id,jdbcType=INTEGER}
    <if test="english_name != null and english_name != ''">
      <bind name="brandName" value="'%' + english_name + '%'" />
      and b.english_name like #{brandName}
    </if>
  </select>

  <select id="queryNotRuleByBrand" resultType="java.util.Map" parameterType="java.util.Map">
    select distinct brand_id,english_name from brand where brand_id not in (
      select pcrcb.brand_id from price_change_rule_category_brand pcrcb
      inner join category c on (c.category_id = pcrcb.category_id and c.enabled = 1)
      inner join brand b on (b.brand_id = pcrcb.brand_id and b.enabled = 1)
      where pcrcb.exception_flag = #{exception_flag,jdbcType=INTEGER} and pcrcb.price_change_rule_id = #{price_change_rule_id,jdbcType=INTEGER}
    )
    <if test="english_name != null and english_name != ''">
      <bind name="brandName" value="'%' + english_name + '%'" />
      and english_name like #{brandName}
    </if>
  </select>

  <select id="queryRuleByGroup" resultType="java.util.Map" parameterType="java.util.Map">

    select pcrg.price_change_rule_group_id,pg.`name`,pcrg.discount_percentage from price_change_rule_group pcrg
        inner join product_group pg on (pcrg.product_group_id = pg.product_group_id)
        where pcrg.price_change_rule_id = #{price_change_rule_id,jdbcType=INTEGER}
  </select>

  <select id="queryRuleByProduct" resultType="java.util.Map" parameterType="java.util.Map">

   select * from price_change_rule_product p where p.price_change_rule_id = #{price_change_rule_id,jdbcType=INTEGER}
  </select>

  <select id="queryRuleByConditions" resultType="java.util.Map" parameterType="java.util.Map">

    select price_change_rule_id,`name` from price_change_rule pcr
    where pcr.price_type = #{price_type,jdbcType=INTEGER} and `status` = #{status,jdbcType=INTEGER} and vendor_id = #{vendor_id,jdbcType=INTEGER}
  </select>

  <insert id="copyPriceChangeRule" parameterType="java.util.Map">

    insert into price_change_rule(`name`,price_type,`status`,vendor_id,user_id)
    values(#{insert_name,jdbcType=INTEGER},#{insert_price_type,jdbcType=INTEGER},#{insert_status,jdbcType=INTEGER},#{insert_vendor_id,jdbcType=INTEGER},#{insert_user_id,jdbcType=INTEGER})
  </insert>

  <insert id="copyPriceChangeRuleCategoryBrand" parameterType="java.util.Map">

    insert into price_change_rule_category_brand(price_change_rule_id,category_id,`level`,brand_id,discount_percentage,exception_flag)
    select #{insert_price_change_rule_id,jdbcType=INTEGER},category_id,`level`,brand_id,
    case
    when
      (pcrcb.discount_percentage - #{discount_percentage,jdbcType=INTEGER}) <![CDATA[  >=  ]]> 0
    then
      (pcrcb.discount_percentage - #{discount_percentage,jdbcType=INTEGER})
    when
      (pcrcb.discount_percentage - #{discount_percentage,jdbcType=INTEGER}) <![CDATA[   <=  ]]> 0
    then
      0
    end,
    exception_flag from price_change_rule_category_brand pcrcb
    where pcrcb.price_change_rule_id = #{price_change_rule_id,jdbcType=INTEGER}
  </insert>

  <insert id="copyPriceChangeRuleGroup" parameterType="java.util.Map">

    insert price_change_rule_group(price_change_rule_id,product_group_id,discount_percentage)
    select #{insert_price_change_rule_id,jdbcType=INTEGER},product_group_id,
    case
    when
      (pcrg.discount_percentage - #{discount_percentage,jdbcType=INTEGER}) <![CDATA[  >=  ]]> 0
    then
      (pcrg.discount_percentage - #{discount_percentage,jdbcType=INTEGER})
    when
      (pcrg.discount_percentage - #{discount_percentage,jdbcType=INTEGER}) <![CDATA[  <=  ]]> 0
    then
      0
    end
    from price_change_rule_group pcrg
    where pcrg.price_change_rule_id = #{price_change_rule_id,jdbcType=INTEGER}
  </insert>

  <insert id="copyPriceChangeRuleProduct" parameterType="java.util.Map">

    insert into price_change_rule_product(price_change_rule_id,product_id,boutique_id,product_name,discount_percentage)
    select #{insert_price_change_rule_id,jdbcType=INTEGER},product_id,boutique_id,product_name,
    case
    when
    (pcrp.discount_percentage - #{discount_percentage,jdbcType=INTEGER}) <![CDATA[  >=  ]]> 0
    then
    (pcrp.discount_percentage - #{discount_percentage,jdbcType=INTEGER})
    when
    (pcrp.discount_percentage - #{discount_percentage,jdbcType=INTEGER}) <![CDATA[  <=  ]]> 0
    then
    0
    end
    from price_change_rule_product pcrp
    where pcrp.price_change_rule_id = #{price_change_rule_id,jdbcType=INTEGER}
  </insert>

  <insert id="copyPriceChangeRuleSeasonGroup" parameterType="java.util.Map">

    insert into price_change_rule_season_group(`name`,price_change_rule_id,season_code,enabled,created_at,updated_at)
    select `name`,#{insert_price_change_rule_id,jdbcType=INTEGER},season_code,enabled,now(),now() from price_change_rule_season_group pcrsg
    where pcrsg.price_change_rule_id = #{price_change_rule_id,jdbcType=INTEGER}
  </insert>
</mapper>