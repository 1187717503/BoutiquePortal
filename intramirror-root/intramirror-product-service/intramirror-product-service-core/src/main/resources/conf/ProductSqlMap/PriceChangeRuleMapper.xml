<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.intramirror.product.core.mapper.PriceChangeRuleMapper">
    <resultMap id="BaseResultMap" type="com.intramirror.product.api.model.PriceChangeRule">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="price_change_rule_id" property="priceChangeRuleId" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="price_type" property="priceType" jdbcType="TINYINT"/>
        <result column="valid_from" property="validFrom" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="vendor_id" property="vendorId" jdbcType="BIGINT"/>
        <result column="shop_id" property="shopId" jdbcType="BIGINT"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        price_change_rule_id, name, price_type, valid_from, status, vendor_id, shop_id
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from price_change_rule
        where price_change_rule_id = #{priceChangeRuleId,jdbcType=BIGINT}
    </select>
    
    
   <select id="selectByName" resultMap="BaseResultMap" parameterType="String">
        select
        <include refid="Base_Column_List"/>
        from price_change_rule
        where name like  CONCAT('%',#{name},'%')
    </select>
    
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from price_change_rule
        where price_change_rule_id = #{priceChangeRuleId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.intramirror.product.api.model.PriceChangeRule"  keyProperty="priceChangeRuleId">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into price_change_rule (price_change_rule_id, name, price_type,
        valid_from, status, vendor_id,
        shop_id,user_id)
        values (#{priceChangeRuleId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{priceType,jdbcType=TINYINT},
        #{validFrom,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{vendorId,jdbcType=BIGINT},
        #{shopId,jdbcType=BIGINT},#{userId,jdbcType=BIGINT})
    </insert>
    <insert id="insertSelective" parameterType="com.intramirror.product.api.model.PriceChangeRule"
            keyProperty="priceChangeRuleId">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into price_change_rule
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="priceChangeRuleId != null">
                price_change_rule_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="priceType != null">
                price_type,
            </if>
            <if test="validFrom != null">
                valid_from,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="vendorId != null">
                vendor_id,
            </if>
            <if test="shopId != null">
                shop_id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="priceChangeRuleId != null">
                #{priceChangeRuleId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="priceType != null">
                #{priceType,jdbcType=TINYINT},
            </if>
            <if test="validFrom != null">
                #{validFrom,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="vendorId != null">
                #{vendorId,jdbcType=BIGINT},
            </if>
            <if test="shopId != null">
                #{shopId,jdbcType=BIGINT},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.intramirror.product.api.model.PriceChangeRule">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update price_change_rule
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="priceType != null">
                price_type = #{priceType,jdbcType=TINYINT},
            </if>
            <if test="validFrom != null">
                valid_from = #{validFrom,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="vendorId != null">
                vendor_id = #{vendorId,jdbcType=BIGINT},
            </if>
            <if test="shopId != null">
                shop_id = #{shopId,jdbcType=BIGINT},
            </if>
        </set>
        where price_change_rule_id = #{priceChangeRuleId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.intramirror.product.api.model.PriceChangeRule">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update price_change_rule
        set name = #{name,jdbcType=VARCHAR},
        price_type = #{priceType,jdbcType=TINYINT},
        valid_from = #{validFrom,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=INTEGER},
        vendor_id = #{vendorId,jdbcType=BIGINT},
        shop_id = #{shopId,jdbcType=BIGINT},
        user_id = #{userId,jdbcType=BIGINT}
        where price_change_rule_id = #{priceChangeRuleId,jdbcType=BIGINT}
    </update>

    <!-- start dingyifan -->
    <update id="updatePriceChangeRuleByVendorFirstCategory">

    update price_change_rule t_pcr,price_change_rule_category_brand t_pcrcb,sku t_sku,product t_pro
    set t_sku.in_price = t_sku.price * t_pcrcb.discount_percentage/((1+0.22)*100)
    where t_pcr.price_type = 1
    and t_pcr.`status` = 1
    and t_sku.enabled = 1
    and t_pro.enabled = 1
    and t_pcrcb.exception_flag = 0
    and t_pcr.vendor_id = t_pro.vendor_id
    and t_sku.product_id = t_pro.product_id
    and t_pcr.price_change_rule_id = t_pcrcb.price_change_rule_id
    and  date_format(t_pcr.valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d')
    and exists
    (
        select * from category c3
        where c3.category_id = t_pro.category_id and c3.parent_id = t_pcrcb.category_id
    )
  </update>

    <update id="updatePriceChangeRuleByVendorAllCategory">

    update price_change_rule pcr,price_change_rule_category_brand pcrcb,sku s,product p
     set s.in_price = s.price * pcrcb.discount_percentage/((1+0.22)*100)
     where pcr.price_type = 1 and
     pcr.`status` = 1 and
     pcr.vendor_id = p.vendor_id and
     date_format(pcr.valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d') and
     pcr.price_change_rule_id = pcrcb.price_change_rule_id and
     pcrcb.exception_flag = 1 and
     p.brand_id = pcrcb.brand_id and
     case
        when pcrcb.`level` = 3 THEN
             pcrcb.category_id = p.category_id
        when pcrcb.`level` = 2 THEN
            EXISTS (
                select * from category c2
                where c2.parent_id = pcrcb.category_id and
                      c2.category_id = p.category_id
            )
        when pcrcb.`level` = 1 THEN
            EXISTS (
                select * from category c2 where exists (
                    select category_id from category c3
                    where c3.parent_id = c2.category_id and
                          c3.category_id = p.category_id
                ) and c2.parent_id = pcrcb.category_id
            )
     end
     and s.product_id = p.product_id and
     s.enabled = 1 and
     p.enabled = 1
  </update>

    <update id="updatePriceChangeRuleByVendorProductGroup">

    update price_change_rule pcr , price_change_rule_group pcrg,sku s, product p
    set s.in_price = s.price * pcrg.discount_percentage/((1+0.22)*100)
    where pcr.price_type = 1 and pcr.status = 1
    and pcr.vendor_id = p.vendor_id and date_format(pcr.valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d')
    and pcr.price_change_rule_id = pcrg.price_change_rule_id
    and s.product_id = p.product_id and p.product_group_id = pcrg.product_group_id
    and s.enabled = 1 and p.enabled = 1
  </update>

    <update id="updatePriceChangeRuleByVendorProduct">

     update price_change_rule pcr,price_change_rule_product pcrp,sku s,product p
     set s.in_price = s.price * pcrp.discount_percentage/((1+0.22)*100)
     where pcr.price_type = 1 and
     pcr.`status` = 1 and
     pcr.vendor_id = p.vendor_id and
     date_format(valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d') and
     pcr.price_change_rule_id = pcrp.price_change_rule_id and
     pcrp.product_id = p.product_id and
     s.product_id = p.product_id and
     s.enabled = 1 and
     p.enabled = 1
  </update>

    <update id="updatePriceChangeRuleByShopFirstCategory">

     update price_change_rule pcr,price_change_rule_category_brand pcrcb,sku s,product p,shop_product_sku sps,shop_product sp
     set sps.sale_price = pcrcb.discount_percentage*s.price/100
     where pcr.price_type = 2 and
     pcr.`status` = 1 and
     date_format(pcr.valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d') and
     pcr.price_change_rule_id = pcrcb.price_change_rule_id and
     pcrcb.exception_flag = 0 and
     exists (
            select c.category_id from category c
                where c.parent_id = pcrcb.category_id and
                c.category_id = p.category_id
        ) and
     s.product_id = p.product_id and
     s.enabled = 1 and
     p.enabled = 1 and
     p.product_id = sp.product_id and
     pcr.shop_id = sp.shop_id and
     sp.shop_product_id = sps.shop_product_id
  </update>

    <update id="updatePriceChangeRuleByShopAllCategory">


     update price_change_rule pcr,price_change_rule_category_brand pcrcb,sku s,product p,shop_product_sku sps,shop_product sp
     set sps.sale_price = pcrcb.discount_percentage*s.price/100
     where pcr.price_type = 2 and
     pcr.`status` = 1 and
     date_format(pcr.valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d') and
     pcr.price_change_rule_id = pcrcb.price_change_rule_id and
     pcrcb.exception_flag = 1 and
     p.brand_id = pcrcb.brand_id and
     case
        when pcrcb.`level` = 3 THEN
             pcrcb.category_id = p.category_id
        when pcrcb.`level` = 2 THEN
            EXISTS (
                select * from category c2
                where c2.parent_id = pcrcb.category_id and
                      c2.category_id = p.category_id
            )
        when pcrcb.`level` = 1 THEN
            EXISTS (
                select * from category c2 where exists (
                    select category_id from category c3
                    where c3.parent_id = c2.category_id and
                          c3.category_id = p.category_id
                ) and c2.parent_id = pcrcb.category_id
            )
     end
     and s.product_id = p.product_id and
     s.enabled = 1 and
     p.enabled = 1 and
     p.product_id = sp.product_id and
     pcr.shop_id = sp.shop_id and
     sp.shop_product_id = sps.shop_product_id;
  </update>

    <update id="updatePriceChangeRuleByShopProductGroup">

    update price_change_rule pcr , price_change_rule_group pcrg,sku s, shop_product sp ,shop_product_sku sps set sps.sale_price = s.price * pcrg.discount_percentage/100 
    where pcr.price_type = 2 and pcr.status = 1 
    and pcr.shop_id = sp.shop_id and date_format(pcr.valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d') 
    and pcr.price_change_rule_id = pcrg.price_change_rule_id and s.product_id = sp.product_id 
    and sp.product_group_id = pcrg.product_group_id and s.enabled = 1 and sp.enabled = 1 
    and sp.shop_product_id = sps.shop_product_id and sps.enabled = 1 
  </update>

    <update id="updatePriceChangeRuleByShopProduct">

     update price_change_rule pcr,price_change_rule_product pcrp,sku s,product p,shop_product_sku sps,shop_product sp
     set sps.sale_price = pcrp.discount_percentage*s.price/100
     where pcr.price_type = 2 and
     pcr.`status` = 1 and
     date_format(valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d') and
     pcr.price_change_rule_id = pcrp.price_change_rule_id and
     pcrp.product_id = p.product_id and
     s.product_id = p.product_id and
     s.enabled = 1 and
     p.enabled = 1 and
     p.product_id = sp.product_id and
     pcr.shop_id = sp.shop_id and
     sp.shop_product_id = sps.shop_product_id
  </update>

    <select id="selectSeasonGroupRule" resultType="java.util.Map" parameterType="java.util.Map">

    select pcr.price_change_rule_id,pcrsg.season_code,pcr.vendor_id,pcr.shop_id,pcr.user_id from price_change_rule pcr
    inner join price_change_rule_season_group pcrsg on (pcrsg.price_change_rule_id = pcr.price_change_rule_id and pcrsg.enabled = 1)
    where pcr.price_type = #{price_type,jdbcType=BIGINT}
    and pcr.`status` = 1
    and date_format(pcr.valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d');
    </select>

    <select id="selectSecondCategoryRule" resultType="java.util.Map" parameterType="java.util.Map">

        select pcrcb.discount_percentage,pcr.vendor_id,pcr.shop_id,pcrcb.category_id,pcrcb.`level`,pcr.price_change_rule_id,pcrcb.brand_id from price_change_rule pcr
        inner join price_change_rule_category_brand pcrcb on (pcr.price_change_rule_id = pcrcb.price_change_rule_id and pcrcb.`level` = 2)
        where 1=1
        and pcr.price_type = #{price_type,jdbcType=BIGINT}
        and pcr.`status` = 1
        and pcrcb.exception_flag = 0
        and  date_format(pcr.valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d')
    </select>

    <select id="selectAllCategoryRule" resultType="java.util.Map" parameterType="java.util.Map">

        select pcrcb.discount_percentage,pcr.vendor_id,pcr.shop_id,pcrcb.category_id,pcrcb.`level`,pcrcb.brand_id,pcr.price_change_rule_id from price_change_rule pcr
        inner join price_change_rule_category_brand pcrcb on (pcr.price_change_rule_id = pcrcb.price_change_rule_id)
        where 1=1
        and pcr.price_type = #{price_type,jdbcType=BIGINT}
        and pcr.`status` = 1
        and pcrcb.exception_flag = 1
        and  date_format(pcr.valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d')
    </select>

    <select id="selectProductGroupRule" resultType="java.util.Map" parameterType="java.util.Map">

        select pcrg.discount_percentage,pcr.vendor_id,pcr.shop_id,pcrg.product_group_id,pcr.price_change_rule_id from price_change_rule pcr
        inner join price_change_rule_group pcrg on (pcr.price_change_rule_id = pcrg.price_change_rule_id)
        and pcr.price_type = #{price_type,jdbcType=BIGINT}
        and pcr.`status` = 1
        and date_format(pcr.valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d')
    </select>

    <select id="selectProductRule" resultType="java.util.Map" parameterType="java.util.Map">


        select pcrp.discount_percentage,pcr.vendor_id,pcr.shop_id,pcrp.product_id,pcr.price_change_rule_id from price_change_rule pcr
        inner join price_change_rule_product pcrp on (pcr.price_change_rule_id = pcrp.price_change_rule_id)
        and pcr.price_type = #{price_type,jdbcType=BIGINT}
        and pcr.`status` = 1
        and  date_format(pcr.valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d')
    </select>

    <update id="updateSkuPriceByVendor" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update sku set sku.in_price = sku.price * #{item.discount_percentage,jdbcType=BIGINT}/((1+0.22)*100) where
            sku.enabled = 1 and sku.product_id in
            (
            select p.product_id from product p where p.enabled = 1

            <!--<if test="item.handle_level == 1">
                and p.category_id in (
                select category_id from category c where c.enabled = 1 and c.`level` = 2 and c.parent_id =
                #{item.category_id,jdbcType=BIGINT}
                )
            </if>-->

            <if test="item.handle_level == 2">
                <if test="item.level == 1">
                    and p.category_id in (
                    select category_id from category c where c.enabled = 1 and c.`level` = 3 and c.parent_id in
                        (
                            select category_id from category c2 where c2.enabled = 1 and c2.`level` = 2 and c2.parent_id =
                            #{item.category_id,jdbcType=BIGINT}
                        )
                    )
                </if>

                <if test="item.level == 2">
                    and p.category_id in (
                        select category_id from category c where c.enabled = 1 and c.`level` = 3 and c.parent_id =
                        #{item.category_id,jdbcType=BIGINT}
                    )
                </if>

                <if test="item.level == 3">
                    and p.category_id = #{item.category_id,jdbcType=BIGINT}
                </if>

                <if test="item.brand_id != null and item.brand_id != ''">
                    and p.brand_id = #{item.brand_id,jdbcType=BIGINT}
                </if>
            </if>

            <if test="item.handle_level == 3">
                and p.product_group_id = #{item.product_group_id,jdbcType=BIGINT}
            </if>

            <if test="item.handle_level == 4">
                and p.product_id = #{item.product_id,jdbcType=BIGINT}
            </if>
            and vendor_id = #{item.vendor_id,jdbcType=BIGINT}
            and p.season_code in
            <foreach item="item" index="index" collection="item.season_codes" open="(" separator="," close=")">
                #{item}
            </foreach>
            )
        </foreach>
    </update>

    <update id="updateSkuPriceByAdmin" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update sku set sku.im_price = sku.price * #{item.discount_percentage,jdbcType=BIGINT}/100 where sku.enabled
            = 1 and sku.product_id in
            (
            select p.product_id from product p where p.enabled = 1

            <!--<if test="item.handle_level == 1">
                and p.category_id in (
                select category_id from category c where c.enabled = 1 and c.`level` = 2 and c.parent_id =
                #{item.category_id,jdbcType=BIGINT}
                )
            </if>-->

            <if test="item.handle_level == 2">
                <if test="item.level == 1">
                    and p.category_id in (
                    select category_id from category c where c.enabled = 1 and c.`level` = 3 and c.parent_id in
                    (
                    select category_id from category c2 where c2.enabled = 1 and c2.`level` = 2 and c2.parent_id =
                    #{item.category_id,jdbcType=BIGINT}
                    )
                    )
                </if>
                <if test="item.level == 2">
                    and p.category_id in (
                    select category_id from category c where c.enabled = 1 and c.`level` = 3 and c.parent_id =
                    #{item.category_id,jdbcType=BIGINT}
                    )
                </if>
                <if test="item.level == 3">
                    and p.category_id = #{item.category_id,jdbcType=BIGINT}
                </if>
                <if test="item.brand_id != null and item.brand_id != ''">
                    and p.brand_id = #{item.brand_id,jdbcType=BIGINT}
                </if>
            </if>

            <if test="item.handle_level == 3">
                and p.product_group_id = #{item.product_group_id,jdbcType=BIGINT}
            </if>

            <if test="item.handle_level == 4">
                and p.product_id = #{item.product_id,jdbcType=BIGINT}
            </if>
            and vendor_id = #{item.vendor_id,jdbcType=BIGINT}
            and p.season_code in
            <foreach item="item" index="index" collection="item.season_codes" open="(" separator="," close=")">
                #{item}
            </foreach>
            )
        </foreach>
    </update>

    <update id="updateSkuPriceByShop" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update shop_product_sku sps,sku set sps.sale_price = sku.price *
            #{item.discount_percentage,jdbcType=BIGINT}/100
            where sps.sku_id = sku.sku_id and sku.enabled = 1 and sps.enabled = 1 and sku.product_id in
            (
            select p.product_id from product p where p.enabled = 1

            <!--<if test="item.handle_level == 1">
                and p.category_id in (
                select category_id from category c where c.enabled = 1 and c.`level` = 2 and c.parent_id =
                #{item.category_id,jdbcType=BIGINT}
                )
            </if>-->

            <if test="item.handle_level == 2">
                <if test="item.level == 1">
                    and p.category_id in (
                    select category_id from category c where c.enabled = 1 and c.`level` = 3 and c.parent_id in
                        (
                            select category_id from category c2 where c2.enabled = 1 and c2.`level` = 2 and c2.parent_id =
                            #{item.category_id,jdbcType=BIGINT}
                        )
                    )
                </if>
                <if test="item.level == 2">
                    and p.category_id in (
                    select category_id from category c where c.enabled = 1 and c.`level` = 3 and c.parent_id =
                    #{item.category_id,jdbcType=BIGINT}
                    )
                </if>
                <if test="item.level == 3">
                    and p.category_id = #{item.category_id,jdbcType=BIGINT}
                </if>
                <if test="item.brand_id != null and item.brand_id != ''">
                    and p.brand_id = #{item.brand_id,jdbcType=BIGINT}
                </if>
            </if>

            <if test="item.handle_level == 3">
                and p.product_group_id = #{item.product_group_id,jdbcType=BIGINT}
            </if>

            <if test="item.handle_level == 4">
                and p.product_id = #{item.product_id,jdbcType=BIGINT}
            </if>
            and p.season_code in (#{item.season_codes})
            and vendor_id = #{item.vendor_id,jdbcType=BIGINT}
            )
        </foreach>
    </update>

    <select id="selNowRule" resultType="java.util.Map" parameterType="java.util.Map">

        select price_change_rule_id,vendor_id from price_change_rule where price_type = #{price_type,jdbcType=BIGINT} and `status` = 1
        and date_format(valid_from,'%y-%m-%d') = date_format(now(),'%y-%m-%d')
    </select>

    <select id="selRuleByVendorPriceType" resultType="java.util.Map" parameterType="java.util.Map">

        select * from price_change_rule pcr where
        pcr.price_type = #{price_type,jdbcType=BIGINT} and pcr.vendor_id = #{vendor_id,jdbcType=BIGINT} and pcr.`status` = #{status,jdbcType=BIGINT}
    </select>

    <update id="updateRuleActive" parameterType="java.util.Map">

        update price_change_rule pcr set pcr.`status` = 2 where
        pcr.price_change_rule_id = #{price_change_rule_id,jdbcType=BIGINT}
    </update>

    <update id="updateRuleInActive" parameterType="java.util.Map">

        update price_change_rule pcr,price_change_rule_season_group pcrsg set `status` = 3 where
        pcr.price_type = #{price_type,jdbcType=BIGINT}
        and pcr.`status` = 2
        and pcr.vendor_id = #{vendor_id,jdbcType=BIGINT}
        and pcr.price_change_rule_id = pcrsg.price_change_rule_id
        and pcrsg.season_code in (
            select season_code from price_change_rule_season_group where price_change_rule_id = #{price_change_rule_id,jdbcType=BIGINT}
        )
    </update>

    <update id="updateDefaultPriceByVendor" parameterType="java.util.Map">

        update sku set sku.in_price = sku.price * #{default_discount_percentage,jdbcType=BIGINT}/((1+0.22)*100)
    </update>

    <update id="updateDefaultPriceByAdmin" parameterType="java.util.Map">

        update sku set sku.im_price = sku.price * #{default_discount_percentage,jdbcType=BIGINT}/100
    </update>

    <update id="updateSkuPriceByImPrice" >

        update sku,shop_product_sku sps set sps.sale_price = sku.im_price
        where sku.enabled = 1 and sps.enabled = 1 and sku.sku_id = sps.sku_id
    </update>

    <!-- end dingyifan -->
</mapper>