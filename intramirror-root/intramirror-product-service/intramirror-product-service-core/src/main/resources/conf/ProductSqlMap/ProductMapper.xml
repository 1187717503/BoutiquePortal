<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.intramirror.product.core.mapper.ProductMapper">
    <resultMap id="BaseResultMap" type="com.intramirror.product.api.model.Product">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="product_id" property="productId" jdbcType="BIGINT"/>
        <result column="category_id" property="categoryId" jdbcType="BIGINT"/>
        <result column="vendor_id" property="vendorId" jdbcType="BIGINT"/>
        <result column="brand_id" property="brandId" jdbcType="BIGINT"/>
        <result column="product_code" property="productCode" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="publish_at" property="publishAt" jdbcType="TIMESTAMP"/>
        <result column="valid_at" property="validAt" jdbcType="TIMESTAMP"/>
        <result column="feature" property="feature" jdbcType="TINYINT"/>
        <result column="rejected_by" property="rejectedBy" jdbcType="VARCHAR"/>
        <result column="rejected_at" property="rejectedAt" jdbcType="TIMESTAMP"/>
        <result column="created_at" property="createdAt" jdbcType="TIMESTAMP"/>
        <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP"/>
        <result column="enabled" property="enabled" jdbcType="BIT"/>
        <result column="customer_rating" property="customerRating" jdbcType="DECIMAL"/>
        <result column="shop_rating" property="shopRating" jdbcType="DECIMAL"/>
        <result column="score" property="score" jdbcType="DECIMAL"/>
        <result column="img_modified" property="imgModified" jdbcType="BIT"/>
        <result column="product_group_id" property="productGroupId" jdbcType="BIGINT"/>
        <result column="season_code" property="seasonCode" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="ResultMapWithBLOBs" type="com.intramirror.product.api.model.ProductWithBLOBs" extends="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <result column="cover_img" property="coverImg" jdbcType="LONGVARCHAR"/>
        <result column="description" property="description" jdbcType="LONGVARCHAR"/>
        <result column="description_img" property="descriptionImg" jdbcType="LONGVARCHAR"/>
        <result column="remark" property="remark" jdbcType="LONGVARCHAR"/>
        <result column="rejected_reason" property="rejectedReason" jdbcType="LONGVARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        product_id, category_id, vendor_id, brand_id, product_code, name, status, publish_at,
        valid_at, feature, rejected_by, rejected_at, created_at, updated_at, enabled, customer_rating,
        shop_rating, score, img_modified, product_group_id, season_code
    </sql>
    <sql id="Blob_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        cover_img, description, description_img, remark, rejected_reason
    </sql>
    <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from product
        where product_id = #{productId,jdbcType=BIGINT}
    </select>

    <select id="selectByParameter" resultMap="ResultMapWithBLOBs" parameterType="com.intramirror.product.api.model.ProductWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from product
        where 1=1
        <if test="productId != null">
            and product_id = #{productId,jdbcType=BIGINT}
        </if>
        <if test="categoryId != null">
            and category_id = #{categoryId,jdbcType=BIGINT}
        </if>
        <if test="vendorId != null">
            and vendor_id = #{vendorId,jdbcType=BIGINT}
        </if>
        <if test="brandId != null">
            and brand_id = #{brandId,jdbcType=BIGINT}
        </if>
        <if test="productCode != null">
            and product_code = #{productCode,jdbcType=VARCHAR}
        </if>
        <if test="name != null">
            and name = #{name,jdbcType=VARCHAR}
        </if>
        <if test="status != null">
            and status = #{status,jdbcType=TINYINT}
        </if>
        <if test="feature != null">
            and feature = #{feature,jdbcType=TINYINT}
        </if>
        <if test="enabled != null">
            and enabled = #{enabled,jdbcType=BIT}
        </if>
        <if test="score != null">
            and score = #{score,jdbcType=DECIMAL}
        </if>
        <if test="productGroupId != null">
            and product_group_id = #{productGroupId,jdbcType=BIGINT}
        </if>
        <if test="seasonCode != null">
            and season_code = #{seasonCode,jdbcType=VARCHAR}
        </if>
    </select>


    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from product
        where product_id = #{productId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.intramirror.product.api.model.ProductWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into product (product_id, category_id, vendor_id,
        brand_id, product_code, name,
        status, publish_at, valid_at,
        feature, rejected_by, rejected_at,
        created_at, updated_at, enabled,
        customer_rating, shop_rating, score,
        img_modified, product_group_id, season_code,
        cover_img, description,
        description_img, remark, rejected_reason
        )
        values (#{productId,jdbcType=BIGINT}, #{categoryId,jdbcType=BIGINT}, #{vendorId,jdbcType=BIGINT},
        #{brandId,jdbcType=BIGINT}, #{productCode,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{status,jdbcType=TINYINT}, #{publishAt,jdbcType=TIMESTAMP}, #{validAt,jdbcType=TIMESTAMP},
        #{feature,jdbcType=TINYINT}, #{rejectedBy,jdbcType=VARCHAR}, #{rejectedAt,jdbcType=TIMESTAMP},
        #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{enabled,jdbcType=BIT},
        #{customerRating,jdbcType=DECIMAL}, #{shopRating,jdbcType=DECIMAL}, #{score,jdbcType=DECIMAL},
        #{imgModified,jdbcType=BIT}, #{productGroupId,jdbcType=BIGINT}, #{seasonCode,jdbcType=VARCHAR},
        #{coverImg,jdbcType=LONGVARCHAR}, #{description,jdbcType=LONGVARCHAR},
        #{descriptionImg,jdbcType=LONGVARCHAR}, #{remark,jdbcType=LONGVARCHAR}, #{rejectedReason,jdbcType=LONGVARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.intramirror.product.api.model.ProductWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into product
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                product_id,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="vendorId != null">
                vendor_id,
            </if>
            <if test="brandId != null">
                brand_id,
            </if>
            <if test="productCode != null">
                product_code,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="publishAt != null">
                publish_at,
            </if>
            <if test="validAt != null">
                valid_at,
            </if>
            <if test="feature != null">
                feature,
            </if>
            <if test="rejectedBy != null">
                rejected_by,
            </if>
            <if test="rejectedAt != null">
                rejected_at,
            </if>
            <if test="createdAt != null">
                created_at,
            </if>
            <if test="updatedAt != null">
                updated_at,
            </if>
            <if test="enabled != null">
                enabled,
            </if>
            <if test="customerRating != null">
                customer_rating,
            </if>
            <if test="shopRating != null">
                shop_rating,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="imgModified != null">
                img_modified,
            </if>
            <if test="productGroupId != null">
                product_group_id,
            </if>
            <if test="seasonCode != null">
                season_code,
            </if>
            <if test="coverImg != null">
                cover_img,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="descriptionImg != null">
                description_img,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="rejectedReason != null">
                rejected_reason,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productId != null">
                #{productId,jdbcType=BIGINT},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=BIGINT},
            </if>
            <if test="vendorId != null">
                #{vendorId,jdbcType=BIGINT},
            </if>
            <if test="brandId != null">
                #{brandId,jdbcType=BIGINT},
            </if>
            <if test="productCode != null">
                #{productCode,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="publishAt != null">
                #{publishAt,jdbcType=TIMESTAMP},
            </if>
            <if test="validAt != null">
                #{validAt,jdbcType=TIMESTAMP},
            </if>
            <if test="feature != null">
                #{feature,jdbcType=TINYINT},
            </if>
            <if test="rejectedBy != null">
                #{rejectedBy,jdbcType=VARCHAR},
            </if>
            <if test="rejectedAt != null">
                #{rejectedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createdAt != null">
                #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="enabled != null">
                #{enabled,jdbcType=BIT},
            </if>
            <if test="customerRating != null">
                #{customerRating,jdbcType=DECIMAL},
            </if>
            <if test="shopRating != null">
                #{shopRating,jdbcType=DECIMAL},
            </if>
            <if test="score != null">
                #{score,jdbcType=DECIMAL},
            </if>
            <if test="imgModified != null">
                #{imgModified,jdbcType=BIT},
            </if>
            <if test="productGroupId != null">
                #{productGroupId,jdbcType=BIGINT},
            </if>
            <if test="seasonCode != null">
                #{seasonCode,jdbcType=VARCHAR},
            </if>
            <if test="coverImg != null">
                #{coverImg,jdbcType=LONGVARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=LONGVARCHAR},
            </if>
            <if test="descriptionImg != null">
                #{descriptionImg,jdbcType=LONGVARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=LONGVARCHAR},
            </if>
            <if test="rejectedReason != null">
                #{rejectedReason,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.intramirror.product.api.model.ProductWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update product
        <set>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=BIGINT},
            </if>
            <if test="vendorId != null">
                vendor_id = #{vendorId,jdbcType=BIGINT},
            </if>
            <if test="brandId != null">
                brand_id = #{brandId,jdbcType=BIGINT},
            </if>
            <if test="productCode != null">
                product_code = #{productCode,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="publishAt != null">
                publish_at = #{publishAt,jdbcType=TIMESTAMP},
            </if>
            <if test="validAt != null">
                valid_at = #{validAt,jdbcType=TIMESTAMP},
            </if>
            <if test="feature != null">
                feature = #{feature,jdbcType=TINYINT},
            </if>
            <if test="rejectedBy != null">
                rejected_by = #{rejectedBy,jdbcType=VARCHAR},
            </if>
            <if test="rejectedAt != null">
                rejected_at = #{rejectedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="createdAt != null">
                created_at = #{createdAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updatedAt != null">
                updated_at = #{updatedAt,jdbcType=TIMESTAMP},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=BIT},
            </if>
            <if test="customerRating != null">
                customer_rating = #{customerRating,jdbcType=DECIMAL},
            </if>
            <if test="shopRating != null">
                shop_rating = #{shopRating,jdbcType=DECIMAL},
            </if>
            <if test="score != null">
                score = #{score,jdbcType=DECIMAL},
            </if>
            <if test="imgModified != null">
                img_modified = #{imgModified,jdbcType=BIT},
            </if>
            <if test="productGroupId != null">
                product_group_id = #{productGroupId,jdbcType=BIGINT},
            </if>
            <if test="seasonCode != null">
                season_code = #{seasonCode,jdbcType=VARCHAR},
            </if>
            <if test="coverImg != null">
                cover_img = #{coverImg,jdbcType=LONGVARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=LONGVARCHAR},
            </if>
            <if test="descriptionImg != null">
                description_img = #{descriptionImg,jdbcType=LONGVARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=LONGVARCHAR},
            </if>
            <if test="rejectedReason != null">
                rejected_reason = #{rejectedReason,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where product_id = #{productId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.intramirror.product.api.model.ProductWithBLOBs">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update product
        set category_id = #{categoryId,jdbcType=BIGINT},
        vendor_id = #{vendorId,jdbcType=BIGINT},
        brand_id = #{brandId,jdbcType=BIGINT},
        product_code = #{productCode,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        status = #{status,jdbcType=TINYINT},
        publish_at = #{publishAt,jdbcType=TIMESTAMP},
        valid_at = #{validAt,jdbcType=TIMESTAMP},
        feature = #{feature,jdbcType=TINYINT},
        rejected_by = #{rejectedBy,jdbcType=VARCHAR},
        rejected_at = #{rejectedAt,jdbcType=TIMESTAMP},
        created_at = #{createdAt,jdbcType=TIMESTAMP},
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
        enabled = #{enabled,jdbcType=BIT},
        customer_rating = #{customerRating,jdbcType=DECIMAL},
        shop_rating = #{shopRating,jdbcType=DECIMAL},
        score = #{score,jdbcType=DECIMAL},
        img_modified = #{imgModified,jdbcType=BIT},
        product_group_id = #{productGroupId,jdbcType=BIGINT},
        season_code = #{seasonCode,jdbcType=VARCHAR},
        cover_img = #{coverImg,jdbcType=LONGVARCHAR},
        description = #{description,jdbcType=LONGVARCHAR},
        description_img = #{descriptionImg,jdbcType=LONGVARCHAR},
        remark = #{remark,jdbcType=LONGVARCHAR},
        rejected_reason = #{rejectedReason,jdbcType=LONGVARCHAR}
        where product_id = #{productId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.intramirror.product.api.model.Product">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update product
        set category_id = #{categoryId,jdbcType=BIGINT},
        vendor_id = #{vendorId,jdbcType=BIGINT},
        brand_id = #{brandId,jdbcType=BIGINT},
        product_code = #{productCode,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        status = #{status,jdbcType=TINYINT},
        publish_at = #{publishAt,jdbcType=TIMESTAMP},
        valid_at = #{validAt,jdbcType=TIMESTAMP},
        feature = #{feature,jdbcType=TINYINT},
        rejected_by = #{rejectedBy,jdbcType=VARCHAR},
        rejected_at = #{rejectedAt,jdbcType=TIMESTAMP},
        created_at = #{createdAt,jdbcType=TIMESTAMP},
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
        enabled = #{enabled,jdbcType=BIT},
        customer_rating = #{customerRating,jdbcType=DECIMAL},
        shop_rating = #{shopRating,jdbcType=DECIMAL},
        score = #{score,jdbcType=DECIMAL},
        img_modified = #{imgModified,jdbcType=BIT},
        product_group_id = #{productGroupId,jdbcType=BIGINT},
        season_code = #{seasonCode,jdbcType=VARCHAR}
        where product_id = #{productId,jdbcType=BIGINT}
    </update>

    <select id="getVendorCodeBySku" resultType="java.util.HashMap">
        select v.vendor_id,v.vendor_name,v.vendor_code
        from shop_product_sku sps inner join sku s on sps.sku_id = s.sku_id
        inner join product p on s.product_id = p.product_id
        inner join vendor v on v.vendor_id = p.vendor_id
        where sps.shop_product_sku_id = #{shopProductSkuId}
    </select>

    <select id="selectProductByVendor" resultType="java.util.HashMap">
      select product_id,product_code from product where enabled = 1 and vendor_id = #{vendorId,jdbcType=BIGINT}
    </select>

    <select id="listProductDetailInfo" parameterType="com.intramirror.product.api.model.SearchCondition" resultType="java.util.HashMap">
        SELECT
        product.product_id,
        product.status AS product_status,
        shop_product.status AS shop_product_status,
        brand.english_name AS brand_name,
        vendor.vendor_name AS boutique,
        product.product_code AS boutique_id,
        product.season_code AS season_code,
        product.category_id,
        t_sku.sku_id,
        t_sku.price AS retail_price,
        t_sku.in_price AS boutique_price,
        <choose>
            <when test="shopStatus != -1">
                shop_product_sku.sale_price AS sale_price,
                shop_product_sku.enabled AS shop_product_sku_enabled,
            </when>
            <otherwise>
                t_sku.im_price AS im_price,
            </otherwise>
        </choose>
        sum_stock.stock AS total_stock,
        bc.brandID,
        bc.colorCode
        FROM product
        LEFT JOIN shop_product ON shop_product.product_id = product.product_id
        INNER JOIN vendor ON product.vendor_id = vendor.vendor_id AND product.enabled = 1
        INNER JOIN brand ON brand.brand_id = product.brand_id
        INNER JOIN (SELECT
        sku_id,
        price,
        in_price,
        im_price,
        product_id
        FROM sku
        GROUP BY product_id) t_sku ON t_sku.product_id = product.product_id
        INNER JOIN (SELECT
        sum(sku_store.store) AS stock,
        sku_store.product_id
        FROM sku_store
        GROUP BY sku_store.product_id) sum_stock ON sum_stock.product_id = product.product_id
        <if test="shopStatus != -1">
            INNER JOIN shop_product_sku ON (shop_product_sku.sku_id = t_sku.sku_id AND shop_product_sku.enabled = 1)
        </if>
        LEFT JOIN (SELECT
        product_property.product_id,
        MAX(CASE product_property.key_name
        WHEN 'ColorCode'
        THEN product_property.`value`
        ELSE ''
        END) AS colorCode,
        MAX(CASE product_property.key_name
        WHEN 'BrandID'
        THEN product_property.`value`
        ELSE ''
        END) AS brandID,
        product_property.enabled,
        product_property.key_name,
        product_property.product_id AS ppid
        FROM product_property
        GROUP BY product_property.product_id) bc
        ON (bc.enabled = 1 AND (bc.key_name = 'BrandID' OR bc.key_name = 'ColorCode') AND
        bc.product_id = product.product_id)
        WHERE
        <choose>
            <when test="shopStatus == -1">
                <choose>
                    <when test="status == 4">
                        product.status = 4 OR product.status = 2
                    </when>
                    <otherwise>
                        product.status = #{status}
                    </otherwise>
                </choose>
                AND (shop_product.enabled = 0 OR shop_product.enabled IS NULL)
            </when>
            <otherwise>
                product.status = #{status} AND shop_product.status = #{shopStatus}
                AND shop_product.enabled = 1
            </otherwise>
        </choose>
        <choose>
            <when test="stock == null or stock == 0">

            </when>
            <when test="stock == 1">
                AND sum_stock.stock &gt; 0
            </when>
            <otherwise>
                AND sum_stock.stock &lt;= 0
            </otherwise>
        </choose>
        <if test="brand != null">
            AND brand.english_name = #{brand}
        </if>
        <if test="category != null">
            AND product.category_id = #{category}
        </if>
        <if test="season != null">
            AND product.season_code = #{season}
        </if>
        <if test="boutiqueid != null">
            AND product.product_code = #{boutiqueid}
        </if>
        <if test="boutique != null">
            AND vendor.vendor_name = #{boutique}
        </if>
        <choose>
            <when test="image == null or image == 0">

            </when>
            <when test="image == 1">
                AND (product.cover_img != NULL AND product.description_img != NULL )
            </when>
            <otherwise>
                AND (product.cover_img == NULL OR product.description_img == NULL )
            </otherwise>
        </choose>
        <choose>
            <when test="modelimage == null or modelimage == 0">

            </when>
            <when test="modelimage == 1">

            </when>
            <otherwise>

            </otherwise>
        </choose>
        <choose>
            <when test="streetimage == null or streetimage == 0">

            </when>
            <when test="streetimage == 1">
                AND product.img_modified = 1
            </when>
            <otherwise>
                AND product.img_modified = 0
            </otherwise>
        </choose>
        <if test="designerid != null">
            AND bc.brandID = #{designerid}
        </if>
        <if test="colorcode != null">
            AND bc.colorCode = #{colorcode}
        </if>

        LIMIT #{start}, #{count};
    </select>

    <select id="getProductStateByProductId" parameterType="Long" resultType="java.util.HashMap">
        SELECT
          product.product_id,
          product.status AS product_status,
          shop_product.status AS shop_product_status
        FROM product
          LEFT JOIN shop_product ON product.product_id = shop_product.product_id  AND shop_product.enabled = 1
        WHERE product.product_id = #{product_id}
    </select>
</mapper>